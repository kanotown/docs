{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u672c\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066","text":"<p>\u672c\u30b5\u30a4\u30c8\u306f\u3001\u8328\u57ce\u5927\u5b66 \u7406\u5de5\u5b66\u7814\u7a76\u79d1 \u52a0\u7d0d\u7814\u7a76\u5ba4 \u306e\u8cc7\u6599\u7f6e\u5834\u3067\u3059\u3002 \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u5404\u7a2e\u8cc7\u6599\u3092\u95b2\u89a7\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"#_2","title":"\u30ea\u30f3\u30af","text":"<ul> <li> <p>\u7814\u7a76\u5ba4\u30b5\u30a4\u30c8 https://kano-lab.com/</p> </li> <li> <p>\u30e1\u30f3\u30d0\u5c02\u7528\u30da\u30fc\u30b8 https://info.kano-lab.com/</p> </li> <li> <p>Kano's page https://kano.ac/</p> </li> <li> <p>Archives of Learning English and Japanese https://blog.kano.ac/archive/</p> </li> </ul> <p></p>"},{"location":"ct/","title":"Index","text":"<p>\u307e\u3060 </p>"},{"location":"ct/trueir/","title":"True IR","text":"<p>True IR \u306e\u5b9f\u88c5\u30e1\u30e2\uff08\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30c9\u306e Java \u79fb\u690d\u7248\uff09\u3067\u3059\u3002</p> <p><code>CalcTrueIR</code> \u30af\u30e9\u30b9\u306b\u30b3\u30fc\u30c9\u4e00\u5f0f\u3092\u8a18\u8ff0\u3059\u308b\u60f3\u5b9a\u3067\u3059\u3002 \u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u7d39\u4ecb\u3057\u305f\u5f8c\u3001\u6700\u5f8c\u306b\u30af\u30e9\u30b9\u5168\u4f53\u306e\u30b3\u30fc\u30c9\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002</p>"},{"location":"ct/trueir/#_1","title":"\u30d5\u30a3\u30fc\u30eb\u30c9\u5909\u6570\u306e\u5ba3\u8a00","text":"<pre><code>    public static int g_px = 512;       // \u6295\u5f71\u306e\u5e45\n    public static int g_pa = 800;       // \u6295\u5f71\u6570\n    public static int g_nx = 512;       // \u753b\u50cf\u306e\u5e45\n    public static int g_ny = 512;       // \u753b\u50cf\u306e\u9ad8\u3055\n\n    public static double g_pl;      // \u753b\u7d20\u9577 (cm/pixel)\n    public static double g_beta2;   // TV\u306e\u91cd\u307f\u4fc2\u6570\n    public static double g_wt;          // \u91cd\u307f (0:\u306a\u3057\uff0c1:\u3042\u308a)\n    public static int g_nit;            // \u7e70\u308a\u8fd4\u3057\u56de\u6570\n    public static int g_p2;         // \u6295\u5f71\u306e\u5168\u89d2\u5ea6 [2]\u03c0 or [1]\u03c0\n    public static int g_ns;         // Cij\u306e\u691c\u51fa\u5668\u5206\u914d\u6570\n\n    public static double[] g_prj;   // \u6295\u5f71\u30c7\u30fc\u30bf\u9818\u57df\n    public static double[] g_img;   // \u539f\u753b\u50cf\u30c7\u30fc\u30bf\u9818\u57df\n    public static int[] g_cx;       // \u691c\u51fa\u78ba\u7387\u306e\u4e2d\u592e\u306ex\u5ea7\u6a19\n    public static double[] g_cc;    // \u691c\u51fa\u78ba\u7387Cij\u306e\u5024\n</code></pre>"},{"location":"ct/trueir/#_2","title":"\u5404\u7a2e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97","text":"<p>\u672c\u30da\u30fc\u30b8\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30de\u30b8\u30c3\u30af\u30ca\u30f3\u30d0\u30fc\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u306f\u3001GUI \u304b\u3089\u5024\u3092\u53d6\u5f97\u3059\u308b\u5f62\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u597d\u307e\u3057\u3044\u3067\u3059\u3002</p> <pre><code>    /**\n     * \u5404\u7a2e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97 \uff08\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u4ee5\u4e0b\u306e\u6570\u5024\u3092\u4f7f\u7528\uff09\n     */\n    public static void getParameters() {\n        g_pl = 0.02;\n        g_beta2 = 0.02;\n        g_wt = 1;\n        g_nit = 50;\n        g_p2 = 2;\n        g_ns = 3;\n    }\n</code></pre>"},{"location":"ct/trueir/#_3","title":"\u30e1\u30a4\u30f3\u306e\u51e6\u7406","text":"<p>\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u306f <code>main</code> \u30e1\u30bd\u30c3\u30c9\u5185\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u5f15\u6570\u306b\u914d\u5217 <code>prj</code> \u3068 <code>img</code> \u3092\u53d7\u3051\u53d6\u308a\u3001\u6295\u5f71\u30c7\u30fc\u30bf <code>prj</code> \u306e\u518d\u69cb\u6210\u7d50\u679c\u3092 <code>img</code> \u306b\u683c\u7d0d\u3059\u308b\u5f62\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u7814\u7a76\u5ba4\u3067\u4f5c\u6210\u3057\u305f\u6295\u5f71\u30c7\u30fc\u30bf\u306e\u8a08\u7b97\u7d50\u679c <code>dataProjectionSinogram</code> \u306f\u30010 \uff5e 65535 \u306e\u6570\u5024\u7bc4\u56f2\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001True IR \u306e\u30b3\u30fc\u30c9\u306f 0 \uff5e 1 \u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5f62\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3042\u3063\u305f\u306e\u3067\u3001<code>prj</code> \u306e\u6570\u5024\u3092 <code>65535.0</code> \u3067\u9664\u3057\u3066\u3044\u307e\u3059\u3002</p> <pre><code>    /**\n     * \u30e1\u30a4\u30f3\u306e\u51e6\u7406\n     *\n     * @param prj \u6295\u5f71\u30c7\u30fc\u30bf\n     * @param img \u518d\u69cb\u6210\u30c7\u30fc\u30bf\n     */\n    public static void main(float[] prj, float[] img) {\n        // \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u4f7f\u7528\u3059\u308b\u5909\u6570\u306e\u5165\u529b\n        getParameters();\n\n        // \u30e1\u30e2\u30ea\u3092\u52d5\u7684\u306b\u78ba\u4fdd\n        g_prj = new double[g_px * g_pa];\n        g_img = new double[g_nx * g_ny];\n        g_cx = new int[g_pa * g_nx * g_ny];\n        g_cc = new double[g_pa * g_nx * g_ny * g_ns];\n\n        // \u691c\u51fa\u78ba\u7387\u306e\u8a08\u7b97\n        detection_probability(g_cx, g_cc, g_px, g_pa, g_p2, g_nx, g_ny, g_ns);\n\n        // \u6295\u5f71\u30c7\u30fc\u30bf\u3068\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30fc\u30bf\u306e\u5165\u529b\n        for (int i = 0; i &lt; g_px * g_pa; i++) {\n            g_prj[i] = prj[i] / 65535.0;\n        }\n        for (int i = 0; i &lt; g_nx * g_ny; i++) {\n            g_img[i] = img[i];\n        }\n\n        // \u9010\u6b21\u8fd1\u4f3c\u518d\u69cb\u6210\n        reconTrueIR();\n\n        // \u7d50\u679c\u306e\u683c\u7d0d\n        for (int i = 0; i &lt; g_nx * g_ny; i++) {\n            img[i] = (float) g_img[i];\n        }\n\n    }\n</code></pre>"},{"location":"ct/trueir/#_4","title":"\u753b\u50cf\u9818\u57df\u306e\u521d\u671f\u5316","text":"<pre><code>    /**\n     * \u753b\u50cf\u9818\u57df\u306e\u521d\u671f\u5316\n     *\n     * @param img \u753b\u50cf\u9818\u57df\n     * @param size \u753b\u50cf\u9818\u57df\u306e\u30c7\u30fc\u30bf\u6570\uff08\u753b\u7d20\u6570\uff09\n     * @param val \u521d\u671f\u5316\u3059\u308b\u5024\n     */\n    public static void init(double[] img, int size, double val) {\n        int i;\n        for (i = 0; i &lt; size; i++) {\n            img[i] = val;\n        }\n    }\n</code></pre>"},{"location":"ct/trueir/#rmse","title":"RMSE \u306e\u8a08\u7b97\u3068\u51fa\u529b","text":"<pre><code>    /**\n     * RMSE \u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\n     *\n     * @param im1 \u8a55\u4fa1\u7528\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param im0 \u539f\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param size \u753b\u50cf\u306e\u30b5\u30a4\u30ba\uff08\u5e45\u00d7\u9ad8\u3055 pixel\uff09\n     */\n    public static void outputRMSE(double[] im1, double[] im0, int size) {\n        int i;\n        double rmse, sum = 0, sum2 = 0;\n\n        for (i = 0; i &lt; size; i++) {\n            sum += (im1[i] - im0[i]) * (im1[i] - im0[i]);\n            sum2 += im0[i] * im0[i];\n        }\n\n        rmse = 100.0 * Math.sqrt(sum) / Math.sqrt(sum2);\n\n        System.out.println(rmse);\n    }\n\n    /**\n     * RMSE \u306e\u8a08\u7b97\u7d50\u679c\u3092\u8fd4\u3059\n     *\n     * @param im1 \u8a55\u4fa1\u7528\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param im0 \u539f\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param size \u753b\u50cf\u306e\u30b5\u30a4\u30ba\uff08\u5e45\u00d7\u9ad8\u3055 pixel\uff09\n     * @return\n     */\n    public static double calc_rmse(double[] im1, double[] im0, int size) {\n        int i;\n        double sum = 0, sum2 = 0;\n\n        for (i = 0; i &lt; size; i++) {\n            sum += (im1[i] - im0[i]) * (im1[i] - im0[i]);\n            sum2 += im0[i] * im0[i];\n        }\n\n        return 100.0 * Math.sqrt(sum) / Math.sqrt(sum2);\n    }\n</code></pre>"},{"location":"ct/trueir/#_5","title":"\u5185\u7a4d\u8a08\u7b97","text":"<pre><code>    /**\n     * \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3092\u8a08\u7b97 : x\u30fby\n     *\n     * @param x 1\u3064\u76ee\u306e\u30d9\u30af\u30c8\u30eb\n     * @param y 2\u3064\u76ee\u306e\u30d9\u30af\u30c8\u30eb\n     * @param n \u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u6570\n     * @return \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\n     */\n    public static double inner_product(double[] x, double[] y, int n) {\n        int i;\n        double inpr = 0;\n\n        for (i = 0; i &lt; n; i++) {\n            inpr += x[i] * y[i];\n        }\n        return inpr;\n    }\n</code></pre>"},{"location":"ct/trueir/#low-pass","title":"\u30ac\u30a6\u30b9\u578b\u306e low-pass \u30d5\u30a3\u30eb\u30bf","text":"<pre><code>    /**\n     * \u30ac\u30a6\u30b9\u578b\u306elow-pass\u30d5\u30a3\u30eb\u30bf\n     *\n     * @param prw \u51e6\u7406\u5f8c\u306e\u6295\u5f71\u30c7\u30fc\u30bf\n     * @param prj \u51e6\u7406\u524d\u306e\u6295\u5f71\u30c7\u30fc\u30bf\n     * @param px \u6295\u5f71\u306e\u5e45\n     * @param pa \u6295\u5f71\u6570\n     */\n    public static void lowpass_filter(double[] prw, double[] prj, int px, int pa) {\n        int i, j, k, n;\n        int c = 4;\n        double[] h = new double[c];\n        double fwhm = 1;\n        double s = fwhm / (2 * Math.sqrt(2 * Math.log(2.0)));\n\n        // \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\n        for (n = 0; n &lt; c; n++) {\n            h[n] = 1 / (Math.sqrt(2 * Math.PI) * s) * Math.exp(-n * n / (2 * s * s));\n        }\n\n        // \u91cd\u7573\u7a4d\u5206\u306b\u3088\u308b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\n        for (i = 0; i &lt; pa; i++) {\n            for (j = 0; j &lt; px; j++) {\n                prw[i * px + j] = 0;\n                for (k = 0; k &lt; px; k++) {\n                    // \u91cd\u7573\u7a4d\u5206\n                    if (Math.abs(j - k) &lt; c) {\n                        prw[i * px + j] += prj[i * px + k] * h[Math.abs(j - k)];\n                    }\n                }\n            }\n        }\n    }\n</code></pre>"},{"location":"ct/trueir/#_6","title":"\u691c\u51fa\u78ba\u7387\u30de\u30c8\u30ea\u30af\u30b9\u306e\u4f5c\u6210","text":"<pre><code>    /**\n     * \u691c\u51fa\u78ba\u7387\u306e\u30de\u30c8\u30ea\u30af\u30b9\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\n     *\n     * @param cx \u691c\u51fa\u78ba\u7387\u306e\u691c\u51fa\u4f4d\u7f6ex\u306e\u5024\n     * @param cc \u691c\u51fa\u78ba\u7387\u306e\u5024\n     * @param px \u6295\u5f71\u306e\u52d5\u5f84\u65b9\u5411\u306e\u6570\n     * @param pa \u6295\u5f71\u306e\u89d2\u5ea6\u65b9\u5411\u306e\u6570\n     * @param p2 \u6295\u5f71\u30c7\u30fc\u30bf\u306e\u5168\u89d2\u5ea6\uff08[2]\u03c0\u304b[1]\u03c0\uff09\n     * @param nx \u753b\u50cf\u306ex\u65b9\u5411\u306e\u6570\n     * @param ny \u753b\u50cf\u306ey\u65b9\u5411\u306e\u6570\n     * @param ns 1\u753b\u7d20\u304b\u3089\u5165\u308b\u691c\u51fa\u5668\u306e\u5e45\n     */\n    public static void detection_probability( /*int *cx, double *cc, int px, int pa, int p2, int nx, int ny, int ns*/int[] cx, double[] cc, int px, int pa, int p2, int nx, int ny, int ns) {\n        int i, j, k, ix;\n        double x, y, xx, th, a, b, x05, d, si, co;\n        double[] cca = new double[3];\n\n        for (i = 0; i &lt; pa * nx * ny; i++) {\n            cx[i] = 0;\n        }\n        for (i = 0; i &lt; pa * nx * ny * ns; i++) {\n            cc[i] = 0;\n        }\n\n        for (k = 0; k &lt; pa; k++) {\n            th = p2 * Math.PI * k / pa;\n            si = Math.sin(th);\n            co = Math.cos(th);\n            if (Math.abs(si) &gt; Math.abs(co)) {\n                a = Math.abs(si);\n                b = Math.abs(co);\n            } else {\n                a = Math.abs(co);\n                b = Math.abs(si);\n            }\n            for (i = 0; i &lt; ny; i++) {\n                y = ny / 2 - i;\n                for (j = 0; j &lt; nx; j++) {\n                    x = j - nx / 2;\n                    xx = x * co + y * si;\n\n                    cca[0] = cca[1] = cca[2] = 0.0;\n\n                    ix = (int) (Math.floor(xx + 0.5));\n                    if (ix + px / 2 &lt; 1 || ix + px / 2 &gt; px - 2) {\n                        continue;\n                    }\n\n                    x05 = ix - 0.5;\n                    if ((d = x05 - (xx - (a - b) / 2)) &gt; 0.0) {\n                        cca[0] = b / (2 * a) + d / a;\n                    } else if ((d = x05 - (xx - (a + b) / 2)) &gt; 0.0) {\n                        cca[0] = d * d / (2 * a * b);\n                    }\n                    x05 = ix + 0.5;\n                    if ((d = xx + (a - b) / 2 - x05) &gt; 0.0) {\n                        cca[2] = b / (2 * a) + d / a;\n                    } else if ((d = xx + (a + b) / 2 - x05) &gt; 0.0) {\n                        cca[2] = d * d / (2 * a * b);\n                    }\n                    cca[1] = 1.0 - cca[0] - cca[2];\n\n                    cx[k * nx * ny + i * nx + j] = ix + px / 2 - ns / 2;\n                    cc[(k * nx * ny + i * nx + j) * ns + 0] = cca[0];\n                    cc[(k * nx * ny + i * nx + j) * ns + 1] = cca[1];\n                    cc[(k * nx * ny + i * nx + j) * ns + 2] = cca[2];\n                }\n            }\n        }\n    }\n</code></pre>"},{"location":"ct/trueir/#_7","title":"\u6295\u5f71\u30c7\u30fc\u30bf\u306e\u4f5c\u6210","text":"<pre><code>    /**\n     * \u691c\u51fa\u78ba\u7387\u3092\u4f7f\u3063\u3066\u6295\u5f71\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\n     *\n     * @param prj \u4f5c\u6210\u3059\u308b\u6295\u5f71\u30c7\u30fc\u30bf\n     * @param px \u6295\u5f71\u306e\u5e45\n     * @param pa \u6295\u5f71\u6570\n     * @param img \u3082\u3068\u306b\u306a\u308b\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param nx \u753b\u50cf\u306e\u5e45\n     * @param ny \u753b\u50cf\u306e\u9ad8\u3055\n     * @param ns Cij\u306e\u691c\u51fa\u5668\u5206\u914d\u6570\n     * @param pl \u753b\u7d20\u9577\n     */\n    public static void projectionC( /*double *prj, int px, int pa, double *img, int nx, int ny, int ns, double pl*/double[] prj, int px, int pa, double[] img, int nx, int ny, int ns, double pl) {\n        int i, j, k;\n\n        for (i = 0; i &lt; px * pa; i++) {\n            prj[i] = 0;\n        }\n\n        for (k = 0; k &lt; pa; k++) {\n            for (i = 0; i &lt; nx * ny; i++) {\n                for (j = 0; j &lt; ns; j++) {\n                    int jj = g_cx[k * nx * ny + i] + j;\n                    if (jj &lt; 0 || jj &gt; px - 1) {\n                        continue;\n                    }\n                    prj[k * px + jj] += (g_cc[(k * nx * ny + i) * ns + j] * img[i] * pl);\n                }\n            }\n        }\n    }\n</code></pre>"},{"location":"ct/trueir/#_8","title":"\u9006\u6295\u5f71\u8a08\u7b97","text":"<pre><code>    /**\n     * \u691c\u51fa\u78ba\u7387\u3092\u4f7f\u3063\u3066\u6295\u5f71\u30c7\u30fc\u30bf\u304b\u3089\u9006\u6295\u5f71\u3059\u308b\u95a2\u6570\n     *\n     * @param img \u4f5c\u6210\u3059\u308b\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param nx \u753b\u50cf\u306e\u5e45\n     * @param ny \u753b\u50cf\u306e\u9ad8\u3055\n     * @param prj \u3082\u3068\u306b\u306a\u308b\u6295\u5f71\u30c7\u30fc\u30bf\n     * @param px \u6295\u5f71\u306e\u5e45\n     * @param pa \u6295\u5f71\u6570\n     * @param ns Cij\u306e\u691c\u51fa\u5668\u5206\u914d\u6570\n     * @param pl \u753b\u7d20\u9577\n     */\n    public static void backprojectionC(double[] img, int nx, int ny, double[] prj, int px, int pa, int ns, double pl) {\n        int i, j, k;\n\n        for (i = 0; i &lt; nx * ny; i++) {\n            img[i] = 0;\n        }\n\n        for (k = 0; k &lt; pa; k++) {\n            for (i = 0; i &lt; nx * ny; i++) {\n                for (j = 0; j &lt; ns; j++) {\n                    int jj = g_cx[k * nx * ny + i] + j;\n                    if (jj &lt; 0 || jj &gt; px - 1) {\n                        continue;\n                    }\n                    img[i] += (g_cc[(k * nx * ny + i) * ns + j] * prj[k * px + jj] / pl);\n                }\n            }\n        }\n\n        for (i = 0; i &lt; nx * ny; i++) {\n            img[i] *= Math.PI / pa;\n        }\n    }\n</code></pre>"},{"location":"ct/trueir/#_9","title":"\u8a55\u4fa1\u95a2\u6570\u306e\u52fe\u914d","text":"<pre><code>    /**\n     * \u8a55\u4fa1\u95a2\u6570\u306e\u52fe\u914d\uff08\u6b63\u5247\u5316\u9805\u306e\u307f\uff09\n     *\n     * @param gr \u8a55\u4fa1\u95a2\u6570\u306e\u52fe\u914d\u30c7\u30fc\u30bf\n     * @param img \u3082\u3068\u306b\u306a\u308b\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param nx \u753b\u50cf\u306e\u5e45\n     * @param ny \u753b\u50cf\u306e\u9ad8\u3055\n     * @param beta2 TV\u306e\u91cd\u307f\u4fc2\u6570\n     */\n    public static void nablaU(double[] gr, double[] img, int nx, int ny, double beta2) {\n        int i;\n        double[] im2 = new double[nx * ny];;\n\n        for (i = 0; i &lt; nx * ny; i++) {\n            gr[i] = 0;\n            im2[i] = 0;\n        }\n\n        // \u2207TV(m) \u306e\u8a08\u7b97\n        if (beta2 != 0.0) {\n            nablaTV(im2, img, nx, ny);\n\n            for (i = 0; i &lt; nx * ny; i++) {\n                gr[i] += beta2 * im2[i];\n            }\n        }\n    }\n</code></pre>"},{"location":"ct/trueir/#tvtotal-variation","title":"\u2207TV\uff08Total Variation \u306e\u52fe\u914d\uff09\u306e\u8a08\u7b97","text":"<pre><code>    /**\n     * \u2207TV\uff08Total Variation\u306e\u52fe\u914d\uff09\u306e\u8a08\u7b97\n     *\n     * @param ntv \u2207TV\u306e\u8a08\u7b97\u7d50\u679c\n     * @param img \u3082\u3068\u306b\u306a\u308b\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param nx \u753b\u50cf\u306e\u5e45\n     * @param ny \u753b\u50cf\u306e\u9ad8\u3055\n     */\n    public static void nablaTV(double[] ntv, double[] img, int nx, int ny) {\n        int i, j, k;\n        double tv1, tv2, ep = 0.0001;\n\n        int[] x = new int[3];\n        int[] y = new int[3];\n        double[] fil = new double[9];\n\n        // TV\u306e\u8a08\u7b97\n        for (i = 0; i &lt; ny; i++) {\n            y[0] = (i + ny - 1) % ny;\n            y[1] = i;\n            y[2] = (i + 1) % ny;\n            for (j = 0; j &lt; nx; j++) {\n                x[0] = (j + nx - 1) % nx;\n                x[1] = j;\n                x[2] = (j + 1) % nx;\n                for (k = 0; k &lt; 9; k++) {\n                    fil[k] = img[y[k / 3] * nx + x[k % 3]];\n                }\n\n                tv1 = (fil[4] - fil[3]) / Math.sqrt((fil[4] - fil[3]) * (fil[4] - fil[3]) + (fil[6] - fil[3]) * (fil[6] - fil[3]) + ep * ep)\n                        + (fil[4] - fil[1]) / Math.sqrt((fil[2] - fil[1]) * (fil[2] - fil[1]) + (fil[4] - fil[1]) * (fil[4] - fil[1]) + ep * ep)\n                        - (fil[5] + fil[7] - 2 * fil[4]) / Math.sqrt((fil[5] - fil[4]) * (fil[5] - fil[4]) + (fil[7] - fil[4]) * (fil[7] - fil[4]) + ep * ep);\n                tv2 = (fil[4] - fil[1]) / Math.sqrt((fil[4] - fil[1]) * (fil[4] - fil[1]) + (fil[0] - fil[1]) * (fil[0] - fil[1]) + ep * ep)\n                        + (fil[4] - fil[5]) / Math.sqrt((fil[8] - fil[5]) * (fil[8] - fil[5]) + (fil[4] - fil[5]) * (fil[4] - fil[5]) + ep * ep)\n                        - (fil[7] + fil[3] - 2 * fil[4]) / Math.sqrt((fil[7] - fil[4]) * (fil[7] - fil[4]) + (fil[3] - fil[4]) * (fil[3] - fil[4]) + ep * ep);\n\n                ntv[i * nx + j] = (tv1 + tv2) / 2;\n            }\n        }\n    }\n</code></pre>"},{"location":"ct/trueir/#_10","title":"\u9010\u6b21\u8fd1\u4f3c\u6295\u5f71\u518d\u69cb\u6210 (\u6700\u6025\u964d\u4e0b\u6cd5)","text":"<pre><code>    /**\n     * \u9010\u6b21\u8fd1\u4f3c\u6295\u5f71\u518d\u69cb\u6210 (\u6700\u6025\u964d\u4e0b\u6cd5)\n     */\n    public static void reconTrueIR() {\n        int i, k;\n        double alpha = 0;\n\n        //\u30e1\u30e2\u30ea\u3092\u52d5\u7684\u306b\u78ba\u4fdd\n        double[] pr0 = new double[g_px * g_pa];    // \u6295\u5f71\u30c7\u30fc\u30bf\u9818\u57df\uff08\u8a08\u7b97\u75280\uff09\n        double[] pr1 = new double[g_px * g_pa];    // \u6295\u5f71\u30c7\u30fc\u30bf\u9818\u57df\uff08\u8a08\u7b97\u75281\uff09\n        double[] prw = new double[g_px * g_pa];    // \u91cd\u307f\u4ed8\u3051\u6700\u5c0f\u4e8c\u4e57\u6cd5\u7528\u306e\u30c7\u30fc\u30bf\u9818\u57df\n        double[] im1 = new double[g_nx * g_ny];    // \u4eee\u5b9a\u753b\u50cf\u306e\u30c7\u30fc\u30bf\u9818\u57df\n        double[] dux = new double[g_nx * g_ny];    // \u6b63\u5247\u5316\u9805\u306e\u30c7\u30fc\u30bf\u9818\u57df\n        double[] gk0 = new double[g_nx * g_ny];    // \u8a08\u7b97\u7528\u306e\u30c7\u30fc\u30bf\u9818\u57df(0)\n        double[] gk1 = new double[g_nx * g_ny];    // \u8a08\u7b97\u7528\u306e\u30c7\u30fc\u30bf\u9818\u57df(1)\n\n        //\u91cd\u307f\u4ed8\u3051\u7528\u306e\u6295\u5f71\u4f5c\u6210\uff08\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u308b\u5e73\u6ed1\u5316\uff09\n        if (g_wt &lt;= 0.0) {\n            init(prw, g_px * g_pa, 0.0);\n        } else {\n            lowpass_filter(prw, g_prj, g_px, g_pa);\n        }\n\n        //\u521d\u671f\u753b\u50cf x0\n        init(im1, g_nx * g_ny, 0.0);\n\n        //RMSE\u306e\u51fa\u529b\n        outputRMSE(im1, g_img, g_nx * g_ny);\n\n        //\u9010\u6b21\u8fd1\u4f3c\u306e\u7e70\u308a\u8fd4\u3057\n        for (k = 0; k &lt; g_nit; k++) {\n            if (k == 0) {\n                // 1\u56de\u76ee\u306f\u305d\u306e\u307e\u307e\u52fe\u914d\u3092\u6c42\u3081\u308b\n                // g0 = AT (A x0 - y) D\n                // \u6295\u5f71 A x0\n                projectionC(pr0, g_px, g_pa, im1, g_nx, g_ny, g_ns, g_pl);\n                // \u91cd\u307f\u4ed8\u3051 (A x0 - y) D\n                for (i = 0; i &lt; g_px * g_pa; i++) {\n                    pr0[i] = (pr0[i] - g_prj[i]) * Math.exp(-prw[i]);\n                }\n                // \u9006\u6295\u5f71 AT (A x0 - y) D\n                backprojectionC(gk0, g_nx, g_ny, pr0, g_px, g_pa, g_ns, g_pl);\n            } else {\n                // 2\u56de\u76ee\u4ee5\u964d\u306f\u524d\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u52fe\u914d\u3092\u66f4\u65b0\n                // gk+1 = gk - \u03b1k (AT A gk D)\n                for (i = 0; i &lt; g_nx * g_ny; i++) {\n                    gk0[i] -= alpha * gk1[i];\n                }\n            }\n\n            // \u03b1k = (gk)T gk / (gk)T (AT A gk D) -----------------------\n            // \u6295\u5f71 A gk\n            projectionC(pr1, g_px, g_pa, gk0, g_nx, g_ny, g_ns, g_pl);\n\n            // \u91cd\u307f\u4ed8\u3051 A gk D\n            for (i = 0; i &lt; g_px * g_pa; i++) {\n                pr0[i] = pr1[i] * Math.exp(-prw[i]);\n            }\n\n            // \u9006\u6295\u5f71 AT A gk D\n            backprojectionC(gk1, g_nx, g_ny, pr0, g_px, g_pa, g_ns, g_pl);\n\n            // \u5185\u7a4d\u306e\u6bd4\u304b\u3089\u03b1k\u3092\u7b97\u51fa\n            alpha = inner_product(gk0, gk0, g_nx * g_ny) / inner_product(gk0, gk1, g_nx * g_ny);\n\n            // \u6b63\u5247\u5316\u9805 \u03b2dU(x)/dx\n            nablaU(dux, im1, g_nx, g_ny, g_beta2);\n\n            // xk+1 = xk - \u03b1k(gk + \u03b2dU(x)/dx)\n            for (i = 0; i &lt; g_nx * g_ny; i++) {\n                im1[i] -= alpha * (gk0[i] + dux[i]);\n            }\n\n            // \u5b9f\u90e8\u306e\u8ca0\u5024\u306f0\u306b\u3059\u308b\u62d8\u675f\u6761\u4ef6\n            for (i = 0; i &lt; g_nx * g_ny; i++) {\n                if (im1[i] &lt; 0.0) {\n                    im1[i] = 0;\n                }\n            }\n\n            // \u7d50\u679c\u753b\u50cf\u306e\u51fa\u529b\n            if (k &lt; 10 || k % 10 == 9 || true) {\n                for (int l = 0; l &lt; g_nx * g_ny; l++) {\n                    g_img[l] = im1[l];\n                }\n                System.out.println(\"k = \" + k);\n            }\n        }\n    }\n</code></pre>"},{"location":"ct/trueir/#calctrueir","title":"CalcTrueIR \u30af\u30e9\u30b9\u5168\u4f53","text":"<pre><code>package calc;\n\npublic class CalcTrueIR {\n\n    // \u30d5\u30a3\u30fc\u30eb\u30c9\u5909\u6570\u306e\u5ba3\u8a00\u3068\u521d\u671f\u5024\u8a2d\u5b9a\n    public static int g_px = 512;       // \u6295\u5f71\u306e\u5e45\n    public static int g_pa = 800;       // \u6295\u5f71\u6570\n    public static int g_nx = 512;       // \u753b\u50cf\u306e\u5e45\n    public static int g_ny = 512;       // \u753b\u50cf\u306e\u9ad8\u3055\n\n    public static double g_pl;              // \u753b\u7d20\u9577 (cm/pixel)\n    public static double g_beta2;           // TV\u306e\u91cd\u307f\u4fc2\u6570\n    public static double g_wt;          // \u91cd\u307f (0:\u306a\u3057\uff0c1:\u3042\u308a)\n    public static int g_nit;            // \u7e70\u308a\u8fd4\u3057\u56de\u6570\n    public static int g_p2;                     // \u6295\u5f71\u306e\u5168\u89d2\u5ea6 [2]\u03c0 or [1]\u03c0\n    public static int g_ns;                     // Cij\u306e\u691c\u51fa\u5668\u5206\u914d\u6570\n\n    public static double[] g_prj;               // \u6295\u5f71\u30c7\u30fc\u30bf\u9818\u57df\n    public static double[] g_img;               // \u539f\u753b\u50cf\u30c7\u30fc\u30bf\u9818\u57df\n    public static int[] g_cx;                   // \u691c\u51fa\u78ba\u7387\u306e\u4e2d\u592e\u306ex\u5ea7\u6a19\n    public static double[] g_cc;                // \u691c\u51fa\u78ba\u7387Cij\u306e\u5024\n\n    /**\n     * \u5404\u7a2e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97 \uff08\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u4ee5\u4e0b\u306e\u6570\u5024\u3092\u4f7f\u7528\uff09\n     */\n    public static void getParameters() {\n        g_pl = 0.02;\n        g_beta2 = 0.02;\n        g_wt = 1;\n        g_nit = 50;\n        g_p2 = 2;\n        g_ns = 3;\n    }\n\n    /**\n     * \u30e1\u30a4\u30f3\u306e\u51e6\u7406\n     *\n     * @param prj \u6295\u5f71\u30c7\u30fc\u30bf\n     * @param img \u518d\u69cb\u6210\u30c7\u30fc\u30bf\n     */\n    public static void main(float[] prj, float[] img) {\n        // \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u4f7f\u7528\u3059\u308b\u5909\u6570\u306e\u5165\u529b\n        getParameters();\n\n        // \u30e1\u30e2\u30ea\u3092\u52d5\u7684\u306b\u78ba\u4fdd\n        g_prj = new double[g_px * g_pa];\n        g_img = new double[g_nx * g_ny];\n        g_cx = new int[g_pa * g_nx * g_ny];\n        g_cc = new double[g_pa * g_nx * g_ny * g_ns];\n\n        // \u691c\u51fa\u78ba\u7387\u306e\u8a08\u7b97\n        detection_probability(g_cx, g_cc, g_px, g_pa, g_p2, g_nx, g_ny, g_ns);\n\n        // \u6295\u5f71\u30c7\u30fc\u30bf\u3068\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30fc\u30bf\u306e\u5165\u529b\n        for (int i = 0; i &lt; g_px * g_pa; i++) {\n            g_prj[i] = prj[i] / 65535.0;\n        }\n        for (int i = 0; i &lt; g_nx * g_ny; i++) {\n            g_img[i] = img[i];\n        }\n\n        // \u9010\u6b21\u8fd1\u4f3c\u518d\u69cb\u6210\n        reconTrueIR();\n\n        // \u7d50\u679c\u306e\u683c\u7d0d\n        for (int i = 0; i &lt; g_nx * g_ny; i++) {\n            img[i] = (float) g_img[i];\n        }\n\n    }\n\n    /**\n     * \u753b\u50cf\u9818\u57df\u306e\u521d\u671f\u5316\n     *\n     * @param img \u753b\u50cf\u9818\u57df\n     * @param size \u753b\u50cf\u9818\u57df\u306e\u30c7\u30fc\u30bf\u6570\uff08\u753b\u7d20\u6570\uff09\n     * @param val \u521d\u671f\u5316\u3059\u308b\u5024\n     */\n    public static void init(double[] img, int size, double val) {\n        int i;\n        for (i = 0; i &lt; size; i++) {\n            img[i] = val;\n        }\n    }\n\n    /**\n     * RMSE \u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\n     *\n     * @param im1 \u8a55\u4fa1\u7528\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param im0 \u539f\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param size \u753b\u50cf\u306e\u30b5\u30a4\u30ba\uff08\u5e45\u00d7\u9ad8\u3055 pixel\uff09\n     */\n    public static void outputRMSE(double[] im1, double[] im0, int size) {\n        int i;\n        double rmse, sum = 0, sum2 = 0;\n\n        for (i = 0; i &lt; size; i++) {\n            sum += (im1[i] - im0[i]) * (im1[i] - im0[i]);\n            sum2 += im0[i] * im0[i];\n        }\n\n        rmse = 100.0 * Math.sqrt(sum) / Math.sqrt(sum2);\n\n        System.out.println(rmse);\n    }\n\n    /**\n     * RMSE \u306e\u8a08\u7b97\u7d50\u679c\u3092\u8fd4\u3059\n     *\n     * @param im1 \u8a55\u4fa1\u7528\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param im0 \u539f\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param size \u753b\u50cf\u306e\u30b5\u30a4\u30ba\uff08\u5e45\u00d7\u9ad8\u3055 pixel\uff09\n     * @return\n     */\n    public static double calc_rmse(double[] im1, double[] im0, int size) {\n        int i;\n        double sum = 0, sum2 = 0;\n\n        for (i = 0; i &lt; size; i++) {\n            sum += (im1[i] - im0[i]) * (im1[i] - im0[i]);\n            sum2 += im0[i] * im0[i];\n        }\n\n        return 100.0 * Math.sqrt(sum) / Math.sqrt(sum2);\n    }\n\n    /**\n     * \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3092\u8a08\u7b97 : x\u30fby\n     *\n     * @param x 1\u3064\u76ee\u306e\u30d9\u30af\u30c8\u30eb\n     * @param y 2\u3064\u76ee\u306e\u30d9\u30af\u30c8\u30eb\n     * @param n \u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u6570\n     * @return \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\n     */\n    public static double inner_product(double[] x, double[] y, int n) {\n        int i;\n        double inpr = 0;\n\n        for (i = 0; i &lt; n; i++) {\n            inpr += x[i] * y[i];\n        }\n        return inpr;\n    }\n\n    /**\n     * \u30ac\u30a6\u30b9\u578b\u306elow-pass\u30d5\u30a3\u30eb\u30bf\n     *\n     * @param prw \u51e6\u7406\u5f8c\u306e\u6295\u5f71\u30c7\u30fc\u30bf\n     * @param prj \u51e6\u7406\u524d\u306e\u6295\u5f71\u30c7\u30fc\u30bf\n     * @param px \u6295\u5f71\u306e\u5e45\n     * @param pa \u6295\u5f71\u6570\n     */\n    public static void lowpass_filter(double[] prw, double[] prj, int px, int pa) {\n        int i, j, k, n;\n        int c = 4;\n        double[] h = new double[c];\n        double fwhm = 1;\n        double s = fwhm / (2 * Math.sqrt(2 * Math.log(2.0)));\n\n        // \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\n        for (n = 0; n &lt; c; n++) {\n            h[n] = 1 / (Math.sqrt(2 * Math.PI) * s) * Math.exp(-n * n / (2 * s * s));\n        }\n\n        // \u91cd\u7573\u7a4d\u5206\u306b\u3088\u308b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\n        for (i = 0; i &lt; pa; i++) {\n            for (j = 0; j &lt; px; j++) {\n                prw[i * px + j] = 0;\n                for (k = 0; k &lt; px; k++) {\n                    // \u91cd\u7573\u7a4d\u5206\n                    if (Math.abs(j - k) &lt; c) {\n                        prw[i * px + j] += prj[i * px + k] * h[Math.abs(j - k)];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * \u691c\u51fa\u78ba\u7387\u306e\u30de\u30c8\u30ea\u30af\u30b9\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\n     *\n     * @param cx \u691c\u51fa\u78ba\u7387\u306e\u691c\u51fa\u4f4d\u7f6ex\u306e\u5024\n     * @param cc \u691c\u51fa\u78ba\u7387\u306e\u5024\n     * @param px \u6295\u5f71\u306e\u52d5\u5f84\u65b9\u5411\u306e\u6570\n     * @param pa \u6295\u5f71\u306e\u89d2\u5ea6\u65b9\u5411\u306e\u6570\n     * @param p2 \u6295\u5f71\u30c7\u30fc\u30bf\u306e\u5168\u89d2\u5ea6\uff08[2]\u03c0\u304b[1]\u03c0\uff09\n     * @param nx \u753b\u50cf\u306ex\u65b9\u5411\u306e\u6570\n     * @param ny \u753b\u50cf\u306ey\u65b9\u5411\u306e\u6570\n     * @param ns 1\u753b\u7d20\u304b\u3089\u5165\u308b\u691c\u51fa\u5668\u306e\u5e45\n     */\n    public static void detection_probability( /*int *cx, double *cc, int px, int pa, int p2, int nx, int ny, int ns*/int[] cx, double[] cc, int px, int pa, int p2, int nx, int ny, int ns) {\n        int i, j, k, ix;\n        double x, y, xx, th, a, b, x05, d, si, co;\n        double[] cca = new double[3];\n\n        for (i = 0; i &lt; pa * nx * ny; i++) {\n            cx[i] = 0;\n        }\n        for (i = 0; i &lt; pa * nx * ny * ns; i++) {\n            cc[i] = 0;\n        }\n\n        for (k = 0; k &lt; pa; k++) {\n            th = p2 * Math.PI * k / pa;\n            si = Math.sin(th);\n            co = Math.cos(th);\n            if (Math.abs(si) &gt; Math.abs(co)) {\n                a = Math.abs(si);\n                b = Math.abs(co);\n            } else {\n                a = Math.abs(co);\n                b = Math.abs(si);\n            }\n            for (i = 0; i &lt; ny; i++) {\n                y = ny / 2 - i;\n                for (j = 0; j &lt; nx; j++) {\n                    x = j - nx / 2;\n                    xx = x * co + y * si;\n\n                    cca[0] = cca[1] = cca[2] = 0.0;\n\n                    ix = (int) (Math.floor(xx + 0.5));\n                    if (ix + px / 2 &lt; 1 || ix + px / 2 &gt; px - 2) {\n                        continue;\n                    }\n\n                    x05 = ix - 0.5;\n                    if ((d = x05 - (xx - (a - b) / 2)) &gt; 0.0) {\n                        cca[0] = b / (2 * a) + d / a;\n                    } else if ((d = x05 - (xx - (a + b) / 2)) &gt; 0.0) {\n                        cca[0] = d * d / (2 * a * b);\n                    }\n                    x05 = ix + 0.5;\n                    if ((d = xx + (a - b) / 2 - x05) &gt; 0.0) {\n                        cca[2] = b / (2 * a) + d / a;\n                    } else if ((d = xx + (a + b) / 2 - x05) &gt; 0.0) {\n                        cca[2] = d * d / (2 * a * b);\n                    }\n                    cca[1] = 1.0 - cca[0] - cca[2];\n\n                    cx[k * nx * ny + i * nx + j] = ix + px / 2 - ns / 2;\n                    cc[(k * nx * ny + i * nx + j) * ns + 0] = cca[0];\n                    cc[(k * nx * ny + i * nx + j) * ns + 1] = cca[1];\n                    cc[(k * nx * ny + i * nx + j) * ns + 2] = cca[2];\n                }\n            }\n        }\n    }\n\n    /**\n     * \u691c\u51fa\u78ba\u7387\u3092\u4f7f\u3063\u3066\u6295\u5f71\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\n     *\n     * @param prj \u4f5c\u6210\u3059\u308b\u6295\u5f71\u30c7\u30fc\u30bf\n     * @param px \u6295\u5f71\u306e\u5e45\n     * @param pa \u6295\u5f71\u6570\n     * @param img \u3082\u3068\u306b\u306a\u308b\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param nx \u753b\u50cf\u306e\u5e45\n     * @param ny \u753b\u50cf\u306e\u9ad8\u3055\n     * @param ns Cij\u306e\u691c\u51fa\u5668\u5206\u914d\u6570\n     * @param pl \u753b\u7d20\u9577\n     */\n    public static void projectionC( /*double *prj, int px, int pa, double *img, int nx, int ny, int ns, double pl*/double[] prj, int px, int pa, double[] img, int nx, int ny, int ns, double pl) {\n        int i, j, k;\n\n        for (i = 0; i &lt; px * pa; i++) {\n            prj[i] = 0;\n        }\n\n        for (k = 0; k &lt; pa; k++) {\n            for (i = 0; i &lt; nx * ny; i++) {\n                for (j = 0; j &lt; ns; j++) {\n                    int jj = g_cx[k * nx * ny + i] + j;\n                    if (jj &lt; 0 || jj &gt; px - 1) {\n                        continue;\n                    }\n                    prj[k * px + jj] += (g_cc[(k * nx * ny + i) * ns + j] * img[i] * pl);\n                }\n            }\n        }\n    }\n\n    /**\n     * \u691c\u51fa\u78ba\u7387\u3092\u4f7f\u3063\u3066\u6295\u5f71\u30c7\u30fc\u30bf\u304b\u3089\u9006\u6295\u5f71\u3059\u308b\u95a2\u6570\n     *\n     * @param img \u4f5c\u6210\u3059\u308b\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param nx \u753b\u50cf\u306e\u5e45\n     * @param ny \u753b\u50cf\u306e\u9ad8\u3055\n     * @param prj \u3082\u3068\u306b\u306a\u308b\u6295\u5f71\u30c7\u30fc\u30bf\n     * @param px \u6295\u5f71\u306e\u5e45\n     * @param pa \u6295\u5f71\u6570\n     * @param ns Cij\u306e\u691c\u51fa\u5668\u5206\u914d\u6570\n     * @param pl \u753b\u7d20\u9577\n     */\n    public static void backprojectionC(double[] img, int nx, int ny, double[] prj, int px, int pa, int ns, double pl) {\n        int i, j, k;\n\n        for (i = 0; i &lt; nx * ny; i++) {\n            img[i] = 0;\n        }\n\n        for (k = 0; k &lt; pa; k++) {\n            for (i = 0; i &lt; nx * ny; i++) {\n                for (j = 0; j &lt; ns; j++) {\n                    int jj = g_cx[k * nx * ny + i] + j;\n                    if (jj &lt; 0 || jj &gt; px - 1) {\n                        continue;\n                    }\n                    img[i] += (g_cc[(k * nx * ny + i) * ns + j] * prj[k * px + jj] / pl);\n                }\n            }\n        }\n\n        for (i = 0; i &lt; nx * ny; i++) {\n            img[i] *= Math.PI / pa;\n        }\n    }\n\n    /**\n     * \u8a55\u4fa1\u95a2\u6570\u306e\u52fe\u914d\uff08\u6b63\u5247\u5316\u9805\u306e\u307f\uff09\n     *\n     * @param gr \u8a55\u4fa1\u95a2\u6570\u306e\u52fe\u914d\u30c7\u30fc\u30bf\n     * @param img \u3082\u3068\u306b\u306a\u308b\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param nx \u753b\u50cf\u306e\u5e45\n     * @param ny \u753b\u50cf\u306e\u9ad8\u3055\n     * @param beta2 TV\u306e\u91cd\u307f\u4fc2\u6570\n     */\n    public static void nablaU(double[] gr, double[] img, int nx, int ny, double beta2) {\n        int i;\n        double[] im2 = new double[nx * ny];;\n\n        for (i = 0; i &lt; nx * ny; i++) {\n            gr[i] = 0;\n            im2[i] = 0;\n        }\n\n        // \u2207TV(m) \u306e\u8a08\u7b97\n        if (beta2 != 0.0) {\n            nablaTV(im2, img, nx, ny);\n\n            for (i = 0; i &lt; nx * ny; i++) {\n                gr[i] += beta2 * im2[i];\n            }\n        }\n    }\n\n    /**\n     * \u2207TV\uff08Total Variation\u306e\u52fe\u914d\uff09\u306e\u8a08\u7b97\n     *\n     * @param ntv \u2207TV\u306e\u8a08\u7b97\u7d50\u679c\n     * @param img \u3082\u3068\u306b\u306a\u308b\u753b\u50cf\u30c7\u30fc\u30bf\n     * @param nx \u753b\u50cf\u306e\u5e45\n     * @param ny \u753b\u50cf\u306e\u9ad8\u3055\n     */\n    public static void nablaTV(double[] ntv, double[] img, int nx, int ny) {\n        int i, j, k;\n        double tv1, tv2, ep = 0.0001;\n\n        int[] x = new int[3];\n        int[] y = new int[3];\n        double[] fil = new double[9];\n\n        // TV\u306e\u8a08\u7b97\n        for (i = 0; i &lt; ny; i++) {\n            y[0] = (i + ny - 1) % ny;\n            y[1] = i;\n            y[2] = (i + 1) % ny;\n            for (j = 0; j &lt; nx; j++) {\n                x[0] = (j + nx - 1) % nx;\n                x[1] = j;\n                x[2] = (j + 1) % nx;\n                for (k = 0; k &lt; 9; k++) {\n                    fil[k] = img[y[k / 3] * nx + x[k % 3]];\n                }\n\n                tv1 = (fil[4] - fil[3]) / Math.sqrt((fil[4] - fil[3]) * (fil[4] - fil[3]) + (fil[6] - fil[3]) * (fil[6] - fil[3]) + ep * ep)\n                        + (fil[4] - fil[1]) / Math.sqrt((fil[2] - fil[1]) * (fil[2] - fil[1]) + (fil[4] - fil[1]) * (fil[4] - fil[1]) + ep * ep)\n                        - (fil[5] + fil[7] - 2 * fil[4]) / Math.sqrt((fil[5] - fil[4]) * (fil[5] - fil[4]) + (fil[7] - fil[4]) * (fil[7] - fil[4]) + ep * ep);\n                tv2 = (fil[4] - fil[1]) / Math.sqrt((fil[4] - fil[1]) * (fil[4] - fil[1]) + (fil[0] - fil[1]) * (fil[0] - fil[1]) + ep * ep)\n                        + (fil[4] - fil[5]) / Math.sqrt((fil[8] - fil[5]) * (fil[8] - fil[5]) + (fil[4] - fil[5]) * (fil[4] - fil[5]) + ep * ep)\n                        - (fil[7] + fil[3] - 2 * fil[4]) / Math.sqrt((fil[7] - fil[4]) * (fil[7] - fil[4]) + (fil[3] - fil[4]) * (fil[3] - fil[4]) + ep * ep);\n\n                ntv[i * nx + j] = (tv1 + tv2) / 2;\n            }\n        }\n    }\n\n    /**\n     * \u9010\u6b21\u8fd1\u4f3c\u6295\u5f71\u518d\u69cb\u6210 (\u6700\u6025\u964d\u4e0b\u6cd5)\n     */\n    public static void reconTrueIR() {\n        int i, k;\n        double alpha = 0;\n\n        //\u30e1\u30e2\u30ea\u3092\u52d5\u7684\u306b\u78ba\u4fdd\n        double[] pr0 = new double[g_px * g_pa];    // \u6295\u5f71\u30c7\u30fc\u30bf\u9818\u57df\uff08\u8a08\u7b97\u75280\uff09\n        double[] pr1 = new double[g_px * g_pa];    // \u6295\u5f71\u30c7\u30fc\u30bf\u9818\u57df\uff08\u8a08\u7b97\u75281\uff09\n        double[] prw = new double[g_px * g_pa];    // \u91cd\u307f\u4ed8\u3051\u6700\u5c0f\u4e8c\u4e57\u6cd5\u7528\u306e\u30c7\u30fc\u30bf\u9818\u57df\n        double[] im1 = new double[g_nx * g_ny];    // \u4eee\u5b9a\u753b\u50cf\u306e\u30c7\u30fc\u30bf\u9818\u57df\n        double[] dux = new double[g_nx * g_ny];    // \u6b63\u5247\u5316\u9805\u306e\u30c7\u30fc\u30bf\u9818\u57df\n        double[] gk0 = new double[g_nx * g_ny];    // \u8a08\u7b97\u7528\u306e\u30c7\u30fc\u30bf\u9818\u57df(0)\n        double[] gk1 = new double[g_nx * g_ny];    // \u8a08\u7b97\u7528\u306e\u30c7\u30fc\u30bf\u9818\u57df(1)\n\n        //\u91cd\u307f\u4ed8\u3051\u7528\u306e\u6295\u5f71\u4f5c\u6210\uff08\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306b\u3088\u308b\u5e73\u6ed1\u5316\uff09\n        if (g_wt &lt;= 0.0) {\n            init(prw, g_px * g_pa, 0.0);\n        } else {\n            lowpass_filter(prw, g_prj, g_px, g_pa);\n        }\n\n        //\u521d\u671f\u753b\u50cf x0\n        init(im1, g_nx * g_ny, 0.0);\n\n        //RMSE\u306e\u51fa\u529b\n        outputRMSE(im1, g_img, g_nx * g_ny);\n\n        //\u9010\u6b21\u8fd1\u4f3c\u306e\u7e70\u308a\u8fd4\u3057\n        for (k = 0; k &lt; g_nit; k++) {\n            if (k == 0) {\n                // 1\u56de\u76ee\u306f\u305d\u306e\u307e\u307e\u52fe\u914d\u3092\u6c42\u3081\u308b\n                // g0 = AT (A x0 - y) D\n                // \u6295\u5f71 A x0\n                projectionC(pr0, g_px, g_pa, im1, g_nx, g_ny, g_ns, g_pl);\n                // \u91cd\u307f\u4ed8\u3051 (A x0 - y) D\n                for (i = 0; i &lt; g_px * g_pa; i++) {\n                    pr0[i] = (pr0[i] - g_prj[i]) * Math.exp(-prw[i]);\n                }\n                // \u9006\u6295\u5f71 AT (A x0 - y) D\n                backprojectionC(gk0, g_nx, g_ny, pr0, g_px, g_pa, g_ns, g_pl);\n            } else {\n                // 2\u56de\u76ee\u4ee5\u964d\u306f\u524d\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u52fe\u914d\u3092\u66f4\u65b0\n                // gk+1 = gk - \u03b1k (AT A gk D)\n                for (i = 0; i &lt; g_nx * g_ny; i++) {\n                    gk0[i] -= alpha * gk1[i];\n                }\n            }\n\n            // \u03b1k = (gk)T gk / (gk)T (AT A gk D) -----------------------\n            // \u6295\u5f71 A gk\n            projectionC(pr1, g_px, g_pa, gk0, g_nx, g_ny, g_ns, g_pl);\n\n            // \u91cd\u307f\u4ed8\u3051 A gk D\n            for (i = 0; i &lt; g_px * g_pa; i++) {\n                pr0[i] = pr1[i] * Math.exp(-prw[i]);\n            }\n\n            // \u9006\u6295\u5f71 AT A gk D\n            backprojectionC(gk1, g_nx, g_ny, pr0, g_px, g_pa, g_ns, g_pl);\n\n            // \u5185\u7a4d\u306e\u6bd4\u304b\u3089\u03b1k\u3092\u7b97\u51fa\n            alpha = inner_product(gk0, gk0, g_nx * g_ny) / inner_product(gk0, gk1, g_nx * g_ny);\n\n            // \u6b63\u5247\u5316\u9805 \u03b2dU(x)/dx\n            nablaU(dux, im1, g_nx, g_ny, g_beta2);\n\n            // xk+1 = xk - \u03b1k(gk + \u03b2dU(x)/dx)\n            for (i = 0; i &lt; g_nx * g_ny; i++) {\n                im1[i] -= alpha * (gk0[i] + dux[i]);\n            }\n\n            // \u5b9f\u90e8\u306e\u8ca0\u5024\u306f0\u306b\u3059\u308b\u62d8\u675f\u6761\u4ef6\n            for (i = 0; i &lt; g_nx * g_ny; i++) {\n                if (im1[i] &lt; 0.0) {\n                    im1[i] = 0;\n                }\n            }\n\n            // \u7d50\u679c\u753b\u50cf\u306e\u51fa\u529b\n            if (k &lt; 10 || k % 10 == 9 || true) {\n                for (int l = 0; l &lt; g_nx * g_ny; l++) {\n                    g_img[l] = im1[l];\n                }\n                System.out.println(\"k = \" + k);\n            }\n        }\n    }\n\n}\n</code></pre>"},{"location":"ct/trueir/#_11","title":"\u4f7f\u3044\u65b9","text":"<p>\u4ee5\u4e0b\u306e\u3088\u3046\u306b <code>CalcTrueIR.main</code> \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre><code>CalcTrueIR.main(dataProjectionSinogram, dataReconstruction);\n</code></pre> <p></p>"},{"location":"git/","title":"Git \u5165\u9580","text":"<p>Git \u3084 GitHub \u306e\u4f7f\u3044\u65b9\u306a\u3069\u306e\u30e1\u30e2</p>"},{"location":"git/ftp/","title":"FTP \u3067\u81ea\u52d5\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9","text":"<p>GitHub \u306e\u66f4\u65b0\u3092\u691c\u77e5\u3057\u3066\u3001FTP \u306b\u3088\u308a\u81ea\u52d5\u7684\u306b\u30b5\u30fc\u30d0\u306b\u5909\u66f4\u30c7\u30fc\u30bf\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u624b\u9806\u306e\u30e1\u30e2\uff08FTP-Deploy-Action \u3092\u5229\u7528\uff09\u3002</p>"},{"location":"git/ftp/#deployyml","title":"deploy.yml \u306e\u4f5c\u6210","text":"<p>\u30ea\u30dd\u30b8\u30c8\u30ea\u306e <code>.github/workflows/</code> \u5185\u306b <code>deploy.yml</code> \u3092\u4f5c\u6210</p>"},{"location":"git/ftp/#deployyml_1","title":"deploy.yml \u306e\u7de8\u96c6","text":"<pre><code>on: push\nname: \ud83d\ude80 Deploy website on push\njobs:\n  web-deploy:\n    name: \ud83c\udf89 Deploy\n    runs-on: ubuntu-latest\n    steps:\n      - name: \ud83d\ude9a Get latest code\n        uses: actions/checkout@v4\n\n      - name: \ud83d\udcc2 Sync files\n        uses: SamKirkland/FTP-Deploy-Action@v4.3.5\n        with:\n          server: ${{ secrets.FTP_SERVER }}\n          username: ${{ secrets.FTP_USERNAME }}\n          password: ${{ secrets.FTP_PASSWORD }}\n          local-dir: ./site/\n          server-dir: ./\n</code></pre>"},{"location":"git/ftp/#secrets","title":"Secrets \u306e\u4f5c\u6210","text":"<ol> <li>[Settings] -&gt; [Secrets and variables] -&gt; [New repository secret]</li> <li><code>FTP_SERVER</code>\u3001<code>FTP_USERNAME</code>\u3001<code>FTP_PASSWORD</code> \u306e 3 \u3064\u3092\u8a2d\u5b9a\uff08SERVER \u3068 USERNAME \u306f variable \u3067\u3082 OK\uff09</li> </ol>"},{"location":"git/introduction/","title":"\u5c0e\u5165\u306e\u6d41\u308c","text":"<p>VS Code \u3067\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 GitHub \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u624b\u9806\u30e1\u30e2\u3067\u3059\u3002GitHub \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u4e88\u3081\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002</p>"},{"location":"git/introduction/#github","title":"GitHub \u3067\u65b0\u3057\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210","text":"<ol> <li>GitHub \u3067\u65b0\u3057\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210</li> <li>GitHub \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30ed\u30b0\u30a4\u30f3</li> <li>\u53f3\u4e0a\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u753b\u50cf\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001[Your repositories] \u3092\u9078\u629e</li> <li>[New] \u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u65b0\u3057\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u540d\u3092\u5165\u529b\u3057\u3001\u516c\u958b (Public) \u307e\u305f\u306f\u975e\u516c\u958b (Private) \u3092\u9078\u629e</li> <li>[Create repository] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210</li> </ol>"},{"location":"git/introduction/#vscode-git","title":"VSCode \u3067 Git \u3092\u8a2d\u5b9a","text":"<ol> <li>VSCode \u3092\u958b\u304d\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f</li> <li>[View] &gt; [Terminal] \u3092\u9078\u629e\u3057\u3066\uff08\u307e\u305f\u306f [Ctrl/Cmd] + [j]\u3092\u62bc\u3057\u3066\uff09\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u958b\u304f</li> <li>Git \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001Git \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b</li> <li>\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001Git \u306e\u521d\u671f\u8a2d\u5b9a\u3092\u884c\u3046\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09</li> </ol> <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\n</code></pre>"},{"location":"git/introduction/#git","title":"Git \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u521d\u671f\u5316","text":"<pre><code>git init\n</code></pre>"},{"location":"git/introduction/#github_1","title":"GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u63a5\u7d9a","text":"<pre><code>git remote add origin &lt;\u30ea\u30dd\u30b8\u30c8\u30ea\u306eURL&gt;\n</code></pre>"},{"location":"git/introduction/#_2","title":"\u30d5\u30a1\u30a4\u30eb\u3092\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0 &amp; \u30b3\u30df\u30c3\u30c8 &amp; \u30d7\u30c3\u30b7\u30e5","text":"<pre><code>git add .\ngit commit -m \"Initial commit\"\ngit push -u origin master\n</code></pre>"},{"location":"java/","title":"Java \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a","text":"<p>Java \u306b\u3088\u308b GUI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3001\u304a\u3088\u3073 OpenCV \u3092\u7528\u3044\u305f\u753b\u50cf\u51e6\u7406\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3092\u884c\u3046\u305f\u3081\u306e\u5165\u9580\u30da\u30fc\u30b8\u3067\u3059\u3002</p> <p></p>"},{"location":"java/null/","title":"NetBeans \u57fa\u790e","text":"<p>\u307e\u3060</p>"},{"location":"java/gui/","title":"GUI \u958b\u767a","text":"<p>\uff08\u968f\u6642\u66f4\u65b0\u4e88\u5b9a\uff09</p> <p>\u4ee5\u4e0b\u306f\u30012018 \u5e74\u306b\u6771\u4eac\u5de5\u79d1\u5927\u5b66\u306b\u304a\u3044\u3066\u958b\u8b1b\u3057\u305f\u5927\u5b66\u9662\u8b1b\u7fa9\u300c\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u300d\u306e\u8cc7\u6599\u3067\u3059\u3002 \u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Java \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u9069\u5b9c\u8aad\u307f\u63db\u3048\u3092\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002</p>"},{"location":"java/gui/#1-java","title":"\u7b2c\uff11\u56de\u3000 Java \u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9","text":"\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u2460 by @kanotown"},{"location":"java/gui/#2-gui","title":"\u7b2c\uff12\u56de\u3000 GUI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u5165\u51fa\u529b","text":"\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u2461 by @kanotown"},{"location":"java/gui/#3","title":"\u7b2c 3 \u56de\u3000\u4e8c\u5024\u5316\u51e6\u7406\u3001\u753b\u50cf\u306e\u914d\u5217\u5316","text":"\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u2462 by @kanotown"},{"location":"java/gui/#4","title":"\u7b2c 4 \u56de\u3000\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97","text":"\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u2463 by @kanotown"},{"location":"java/gui/#5","title":"\u7b2c 5 \u56de\u3000\u5e73\u6ed1\u5316\u3001\u5148\u92ed\u5316","text":"\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u2464 by @kanotown"},{"location":"java/gui/#6","title":"\u7b2c 6 \u56de\u3000\u63cf\u753b\u64cd\u4f5c\u3001\u9818\u57df\u5857\u308a\u3064\u3076\u3057","text":"\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u2465 by @kanotown"},{"location":"java/gui/#7-rmsepsnrsd","title":"\u7b2c 7 \u56de\u3000\u753b\u50cf\u306e\u5b9a\u91cf\u8a55\u4fa1\uff08RMSE\u3001PSNR\u3001SD\uff09","text":"\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u2466 by @kanotown"},{"location":"java/gui/#8","title":"\u7b2c 8 \u56de\u3000\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u8a3a\u65ad\u652f\u63f4\u3078\u306e\u5c55\u958b\u3001\u307e\u3068\u3081","text":"\u753b\u50cf\u60c5\u5831\u51e6\u7406\u7279\u8ad6\u2467 by @kanotown"},{"location":"java/introduction/environment/","title":"\u74b0\u5883\u69cb\u7bc9","text":"<p>Java \u3067\u753b\u50cf\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3057\u3087\u3046\u3002 \u672c\u8cc7\u6599\u30da\u30fc\u30b8\u3067\u306f\u3001Java \u306e\u7d71\u5408\u958b\u767a\u74b0\u5883\u306b\u3001Java \u63d0\u4f9b\u5143\u3067\u3042\u308b Oracle \u516c\u5f0f\u306e NetBeans \u3092\u7528\u3044\u307e\u3059\u3002 NetBeans \u306f\u3001\u512a\u308c\u305f GUI \u30c7\u30b6\u30a4\u30ca\u3092\u6a19\u6e96\u3067\u642d\u8f09\u3057\u3001\u7c21\u5358\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e UI \u3092\u8a2d\u8a08\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u7279\u5fb4\u3092\u6301\u3061\u307e\u3059\u3002</p>"},{"location":"java/introduction/environment/#1-jdk-java-se-development-kit","title":"1. JDK (Java SE Development Kit) \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u307e\u305a\u306f\u3001Java \u306e\u958b\u767a\u3092\u884c\u3046\u305f\u3081\u306e\u958b\u767a\u30ad\u30c3\u30c8\u3001JDK \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 &amp; \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 \u4e0b\u8a18\u306e\u30ea\u30f3\u30af\u304b\u3089\u3001\u4f7f\u7528\u4e2d\u306e OS \u306b\u5408\u308f\u305b\u305f LTS (Long-term Support) \u306e JDK \u3092\u5165\u624b\u3057\u307e\u3057\u3087\u3046\u3002 https://www.oracle.com/java/technologies/downloads/</p> <p>\u203b 2023/12/01 \u6642\u70b9\u3067\u306e LTS \u6700\u65b0\u7248\u306f 21.0.1</p>"},{"location":"java/introduction/environment/#2-netbeans","title":"2. NetBeans \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u6b21\u306b\u3001\u4e0b\u8a18\u30ea\u30f3\u30af\u304b\u3089 Java \u306e\u7d71\u5408\u958b\u767a\u74b0\u5883\u3067\u3042\u308b NetBeans \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 &amp; \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 [Download] \u2192 [Installers and Packages] \u304b\u3089 OS \u306b\u5408\u3063\u305f\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u5165\u624b\u3057\u307e\u3057\u3087\u3046\u3002 https://netbeans.apache.org/front/main/download/</p> <ul> <li>Windows \u3067\u3042\u308c\u3070 [Apache-NetBeans-19-bin-windows-x64.exe]</li> <li>Mac \u3067\u3042\u308c\u3070 [Apache-NetBeans-19.pkg]</li> </ul> <p>\u203b 2023/12/01 \u6642\u70b9\u3067\u306e\u6700\u65b0\u7248\u306f 19</p>"},{"location":"java/introduction/environment/#3-netbeans","title":"3. NetBeans \u306e\u521d\u671f\u8a2d\u5b9a","text":"<p>NetBeans \u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p>"},{"location":"java/introduction/environment/#_1","title":"\u30d5\u30a9\u30f3\u30c8\u306e\u5909\u66f4","text":"<p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u300cMonospaced\u300d\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u898b\u306b\u304f\u3044\u306e\u3067\u307e\u305a\u306f\u30d5\u30a9\u30f3\u30c8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002</p> <p>\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e [Tool] \u2192 [Options] \u3068\u9032\u307f Options \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u51fa\u3057\u3001[Fonts &amp; Colors] \u30bf\u30d6\u3067\u30d5\u30a9\u30f3\u30c8\u306e\u5909\u66f4\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u7528\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u3055\u307e\u3056\u307e\u5b58\u5728\u3057\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f Ricty Diminished \u3092\u304a\u3059\u3059\u3081\u3057\u3066\u304a\u304d\u307e\u3059\u3002</p> <p></p> <p>\u4f75\u305b\u3066\u3001\u51fa\u529b\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30d5\u30a9\u30f3\u30c8\u3082\u5909\u66f4\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002Options \u30a6\u30a3\u30f3\u30c9\u30a6\u306e [Miscellaneous] \u2192 [Output] \u304b\u3089\u30d5\u30a9\u30f3\u30c8\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002</p> <p></p>"},{"location":"java/introduction/grammar/","title":"Java \u5165\u9580","text":""},{"location":"java/introduction/grammar/#1-java","title":"1. \u306f\u3058\u3081\u3066\u306e Java","text":"<p>Java \u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001Java \u30d0\u30fc\u30c1\u30e3\u30eb\u30de\u30b7\u30f3\uff08JVM\uff09\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u305f\u3081\u3001\u7570\u306a\u308b\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u4e0a\u3067\u3082\u5909\u66f4\u306a\u3057\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u69d8\u3005\u306a\u30c7\u30d0\u30a4\u30b9\u3084 OS \u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u540c\u4e00\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u958b\u767a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u307e\u305f\u3001Java \u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\uff08OOP\uff09\u3092\u5f37\u304f\u63a8\u5968\u3059\u308b\u8a00\u8a9e\u3067\u3059\u3002\u30ab\u30d7\u30bb\u30eb\u5316\u3001\u7d99\u627f\u3001\u305d\u3057\u3066\u591a\u614b\u6027\u3068\u3044\u3063\u305f OOP \u306e\u4e3b\u8981\u306a\u539f\u5247\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#java","title":"\u6700\u521d\u306e Java \u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u521d\u3081\u3066\u306e Java \u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u3001\"Hello, world!\" \u3092\u51fa\u529b\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <pre><code>public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, world!\");\n    }\n}\n</code></pre> <p>\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u57fa\u672c\u7684\u306a Java \u306e\u30af\u30e9\u30b9\u69cb\u6210\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002<code>public class HelloWorld</code> \u3067\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001<code>public static void main(String[] args)</code> \u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002<code>System.out.println</code> \u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30c6\u30ad\u30b9\u30c8\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002</p> <p>Java \u3092\u5b66\u3076\u521d\u5b66\u8005\u306b\u3068\u3063\u3066\u91cd\u8981\u306a\u306e\u306f\u3001\u3053\u306e\u8a00\u8a9e\u304c\u5b89\u5168\u3067\u4fe1\u983c\u6027\u306e\u9ad8\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u3092\u8c4a\u5bcc\u306b\u5099\u3048\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u7279\u5fb4\u306f\u3001\u5927\u898f\u6a21\u306a\u4f01\u696d\u5411\u3051\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089 Android \u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u307e\u3067\u3001\u5e45\u5e83\u3044\u5206\u91ce\u3067 Java \u3092\u9078\u629e\u3059\u308b\u7406\u7531\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#2","title":"2. \u5909\u6570\u3001\u30c7\u30fc\u30bf\u578b\u3001\u6f14\u7b97\u5b50","text":"<p>Java \u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u307e\u305a\u305d\u306e\u57fa\u672c\u7684\u306a\u69cb\u6587\u306b\u6163\u308c\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001Java \u3092\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u76e4\u3068\u306a\u308b\u3001\u5909\u6570\u306e\u5ba3\u8a00\u3001\u30c7\u30fc\u30bf\u578b\u306e\u7406\u89e3\u3001\u305d\u3057\u3066\u6f14\u7b97\u5b50\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#21","title":"2.1 \u5909\u6570","text":"<p>\u5909\u6570\u3068\u306f\u3001\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30c6\u30ca\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002Java \u3067\u306f\u3001\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u524d\u306b\u305d\u306e\u578b\u3092\u5ba3\u8a00\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5909\u6570\u540d\u306f\u82f1\u5b57\u3067\u59cb\u307e\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u306e\u5f8c\u306b\u6570\u5b57\u3084\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\uff08_\uff09\u3001\u30c9\u30eb\u8a18\u53f7\uff08$\uff09\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> \u30b3\u30fc\u30c9\u4f8b<pre><code>int number;       // \u6574\u6570\u578b\u306e\u5909\u6570 number \u3092\u5ba3\u8a00\nString text;      // \u6587\u5b57\u5217\u578b\u306e\u5909\u6570 text \u3092\u5ba3\u8a00\nboolean isActive; // \u30d6\u30fc\u30ea\u30a2\u30f3\u578b\uff08\u771f\u507d\u5024\uff09\u306e\u5909\u6570 isActive \u3092\u5ba3\u8a00\n\nint age = 20;     // \u6574\u6570\u578b\u3067\u5e74\u9f62\u3092\u8868\u3059\u5909\u6570 age \u3092\u5ba3\u8a00\u3057\u300120\u3067\u521d\u671f\u5316\nString name = \"Alice\"; // \u6587\u5b57\u5217\u578b\u3067\u540d\u524d\u3092\u8868\u3059\u5909\u6570 name \u3092\u5ba3\u8a00\u3057\u3001\"Alice\" \u3067\u521d\u671f\u5316\n</code></pre>"},{"location":"java/introduction/grammar/#22","title":"2.2 \u30c7\u30fc\u30bf\u578b","text":"<p>Java \u306b\u306f\u69d8\u3005\u306a\u30c7\u30fc\u30bf\u578b\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u6700\u3082\u57fa\u672c\u7684\u306a\u3082\u306e\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u3068\u53c2\u7167\u578b\u306e\u4e8c\u3064\u306b\u5206\u985e\u3055\u308c\u307e\u3059\u3002\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306b\u306f\u3001\u6574\u6570\u578b\u306e <code>int</code>\u3001\u5b9f\u6570\u578b\u306e <code>double</code>\u3001\u6587\u5b57\u578b\u306e <code>char</code>\u3001\u771f\u507d\u5024\u578b\u306e <code>boolean</code> \u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\u53c2\u7167\u578b\u306b\u306f\u3001\u30af\u30e9\u30b9\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3001\u914d\u5217\u306a\u3069\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u3067\u3082\u6700\u3082\u3088\u304f\u4f7f\u7528\u3055\u308c\u308b\u306e\u304c <code>String</code> \u30af\u30e9\u30b9\u3067\u3059\u3002</p> \u30b3\u30fc\u30c9\u4f8b<pre><code>int x = 10;\nint y = 4;\nint sum = x + y;         // x\u3068y\u306e\u5408\u8a08\nint difference = x - y;  // x\u3068y\u306e\u5dee\nint product = x * y;     // x\u3068y\u306e\u7a4d\ndouble quotient = (double)x / y;  // x\u3092y\u3067\u5272\u3063\u305f\u5546\uff08\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u4fdd\u6301\uff09\nint remainder = x % y;   // x\u3092y\u3067\u5272\u3063\u305f\u4f59\u308a\n\nboolean isEqual = (x == y);         // x\u3068y\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u771f\u507d\u5024\nboolean isNotEqual = (x != y);      // x\u3068y\u304c\u7b49\u3057\u304f\u306a\u3044\u304b\u3069\u3046\u304b\u306e\u771f\u507d\u5024\nboolean isGreaterThan = (x &gt; y);    // x\u304cy\u3088\u308a\u5927\u304d\u3044\u304b\u3069\u3046\u304b\u306e\u771f\u507d\u5024\nboolean isLessThan = (x &lt; y);       // x\u304cy\u3088\u308a\u5c0f\u3055\u3044\u304b\u3069\u3046\u304b\u306e\u771f\u507d\u5024\nboolean isGreaterOrEqual = (x &gt;= y); // x\u304cy\u4ee5\u4e0a\u304b\u3069\u3046\u304b\u306e\u771f\u507d\u5024\nboolean isLessOrEqual = (x &lt;= y);   // x\u304cy\u4ee5\u4e0b\u304b\u3069\u3046\u304b\u306e\u771f\u507d\u5024\n</code></pre> <p>2 \u7ae0\u3067\u306f\u3001\u5909\u6570\u306e\u5ba3\u8a00\u3001\u30c7\u30fc\u30bf\u578b\u306e\u6982\u8981\u3001\u305d\u3057\u3066\u6f14\u7b97\u5b50\u306e\u57fa\u672c\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u306e\u77e5\u8b58\u3092\u57fa\u306b\u3001\u6b21\u306e\u7ae0\u3067\u306f\u5236\u5fa1\u69cb\u6587\u306b\u3064\u3044\u3066\u5b66\u3093\u3067\u3044\u304d\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#3","title":"3. \u6761\u4ef6\u5206\u5c90\u3001\u30eb\u30fc\u30d7","text":"<p>\u5236\u5fa1\u69cb\u6587\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6d41\u308c\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u91cd\u8981\u306a\u6982\u5ff5\u3067\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001Java \u306b\u304a\u3051\u308b\u57fa\u672c\u7684\u306a\u5236\u5fa1\u69cb\u6587\u3067\u3042\u308b\u6761\u4ef6\u5206\u5c90\u3068\u30eb\u30fc\u30d7\u306b\u7126\u70b9\u3092\u5f53\u3066\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u4f8b\u3092\u901a\u3057\u3066\u3001\u3053\u308c\u3089\u306e\u69cb\u6587\u306e\u4f7f\u3044\u65b9\u3068\u6d3b\u7528\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"java/introduction/grammar/#31-if","title":"3.1 \u6761\u4ef6\u5206\u5c90\uff08if \u6587\uff09","text":"<p>\u6761\u4ef6\u5206\u5c90\u306f\u3001\u7279\u5b9a\u306e\u6761\u4ef6\u306b\u57fa\u3065\u3044\u3066\u7570\u306a\u308b\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002Java \u3067\u306f <code>if</code> \u6587\u304c\u6700\u3082\u57fa\u672c\u7684\u306a\u6761\u4ef6\u5206\u5c90\u306e\u69cb\u6587\u3067\u3059\u3002</p> <pre><code>int score = 85;\nif (score &gt;= 90) {\n    System.out.println(\"Excellent!\");\n} else if (score &gt;= 70) {\n    System.out.println(\"Good\");\n} else {\n    System.out.println(\"Try harder\");\n}\n</code></pre> <p>\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001<code>score</code> \u5909\u6570\u306e\u5024\u306b\u57fa\u3065\u3044\u3066\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#32-switch","title":"3.2 switch \u6587","text":"<p>switch \u6587\u306f\u3001\u4e00\u3064\u306e\u5909\u6570\u306b\u5bfe\u3057\u3066\u591a\u304f\u306e\u6761\u4ef6\u5206\u5c90\u304c\u3042\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code>int month = 4;\nswitch (month) {\n    case 1:\n        System.out.println(\"January\");\n        break;\n    case 2:\n        System.out.println(\"February\");\n        break;\n    // ...\n    case 12:\n        System.out.println(\"December\");\n        break;\n    default:\n        System.out.println(\"Invalid month\");\n}\n</code></pre> <p>\u5404 <code>case</code> \u306f\u7279\u5b9a\u306e\u5024\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\u4e00\u81f4\u3059\u308b <code>case</code> \u304c\u898b\u3064\u304b\u308b\u3068\u3001\u305d\u3053\u304b\u3089\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002<code>break</code> \u6587\u306f\u3001\u305d\u308c\u4ee5\u964d\u306e <code>case</code> \u304c\u4e0d\u8981\u306a\u5834\u5408\u306b\u6b21\u306e\u51e6\u7406\u306b\u9032\u3080\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#33-for","title":"3.3 \u30eb\u30fc\u30d7\u69cb\u6587\uff08for \u6587\uff09","text":"<p>\u7e70\u308a\u8fd4\u3057\u5b9f\u884c\u3092\u884c\u3046\u969b\u306b\u306f\u30eb\u30fc\u30d7\u69cb\u6587\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002<code>for</code> \u6587\u306f\u3001\u7279\u5b9a\u306e\u56de\u6570\u3060\u3051\u7e70\u308a\u8fd4\u3057\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code>for (int i = 1; i &lt;= 10; i++) {\n    System.out.println(\"Count is: \" + i);\n}\n</code></pre> <p>\u3053\u306e <code>for</code> \u6587\u306f 1 \u304b\u3089 10 \u307e\u3067\u306e\u6570\u5b57\u3092\u51fa\u529b\u3057\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#34-while-do-while","title":"3.4 while \u6587\u3068 do-while \u6587","text":"<p><code>while</code> \u6587\u306f\u3001\u7279\u5b9a\u306e\u6761\u4ef6\u304c true \u3067\u3042\u308b\u9593\u3001\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u7e70\u308a\u8fd4\u3057\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <pre><code>int i = 1;\nwhile (i &lt;= 10) {\n    System.out.println(\"Count is: \" + i);\n    i++;\n}\n</code></pre> <p><code>do-while</code> \u6587\u306f\u3001\u5c11\u306a\u304f\u3068\u3082\u4e00\u5ea6\u306f\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306b\u6761\u4ef6\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002</p> <pre><code>int j = 1;\ndo {\n    System.out.println(\"Count is: \" + j);\n    j++;\n} while (j &lt;= 10);\n</code></pre> <p>\u3053\u306e\u4e21\u65b9\u306e\u69cb\u6587\u306f\u3001\u7e70\u308a\u8fd4\u3057\u306e\u6570\u304c\u4e8b\u524d\u306b\u306f\u5b9a\u307e\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u7279\u306b\u6709\u7528\u3067\u3059\u3002\u5404\u30eb\u30fc\u30d7\u306b\u306f\u3001\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u305f\u3081\u306e<code>break</code> \u6587\u3084\u6b21\u306e\u7e70\u308a\u8fd4\u3057\u306b\u30b9\u30ad\u30c3\u30d7\u3059\u308b <code>continue</code> \u6587\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p>\u4ee5\u4e0a\u3067\u3001Java \u306b\u304a\u3051\u308b\u57fa\u672c\u7684\u306a\u5236\u5fa1\u69cb\u6587\u3092\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3088\u308a\u5b9f\u8df5\u7684\u306a\u7d4c\u9a13\u3092\u7a4d\u3080\u305f\u3081\u306b\u306f\u3001\u3053\u308c\u3089\u306e\u69cb\u6587\u3092\u4f7f\u3063\u305f\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u81ea\u3089\u4f5c\u6210\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"java/introduction/grammar/#4","title":"4. \u30e1\u30bd\u30c3\u30c9","text":"<p>\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067\u7e70\u308a\u8fd4\u3057\u4f7f\u308f\u308c\u308b\u51e6\u7406\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002\u4e00\u5ea6\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u3001\u5fc5\u8981\u306a\u6642\u306b\u547c\u3073\u51fa\u3057\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e1\u30bd\u30c3\u30c9\u3092\u3046\u307e\u304f\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u306e\u518d\u5229\u7528\u6027\u304c\u9ad8\u307e\u308a\u3001\u53ef\u8aad\u6027\u3084\u4fdd\u5b88\u6027\u3082\u5411\u4e0a\u3057\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#41","title":"4.1 \u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9","text":"<p>\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001\u623b\u308a\u5024\u306e\u578b\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3001\u5f15\u6570\u30ea\u30b9\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u7c21\u5358\u306a\u30e1\u30bd\u30c3\u30c9\u306e\u4f8b\u3067\u3059\u3002</p> <pre><code>int sum(int a, int b) {\n    return a + b;\n}\n</code></pre> <p>\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f 2 \u3064\u306e\u6574\u6570\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u3089\u3092\u8db3\u3057\u5408\u308f\u305b\u305f\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#42","title":"4.2 \u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057","text":"<p>\u5b9a\u7fa9\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u5f15\u6570\u3092\u6307\u5b9a\u3057\u3066\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4e0a\u8a18\u306e <code>sum</code> \u30e1\u30bd\u30c3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u305b\u307e\u3059\u3002</p> <pre><code>int result = sum(3, 4);\nSystem.out.println(result); // \u51fa\u529b: 7\n</code></pre>"},{"location":"java/introduction/grammar/#43","title":"4.3 \u5f15\u6570","text":"<p>\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u5024\u3092\u5f15\u6570\u3068\u547c\u3073\u307e\u3059\u3002\u5f15\u6570\u306f 0 \u500b\u4ee5\u4e0a\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u4f8b\u3082\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002</p> <pre><code>void printHello() {\n    System.out.println(\"Hello, World!\");\n}\n</code></pre> <p>\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f <code>printHello()</code> \u3068\u3057\u3066\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002</p>"},{"location":"java/introduction/grammar/#44","title":"4.4 \u623b\u308a\u5024","text":"<p>\u30e1\u30bd\u30c3\u30c9\u304c\u51e6\u7406\u306e\u7d50\u679c\u3092\u547c\u3073\u51fa\u3057\u5143\u306b\u8fd4\u3059\u306b\u306f\u3001\u623b\u308a\u5024\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u623b\u308a\u5024\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u623b\u308a\u5024\u306e\u578b\u3068\u3057\u3066 void \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#45","title":"4.5 \u30e1\u30bd\u30c3\u30c9\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9","text":"<p>\u540c\u3058\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8907\u6570\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3092\u3001\u30e1\u30bd\u30c3\u30c9\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u3044\u3044\u307e\u3059\u3002\u5f15\u6570\u306e\u6570\u3084\u578b\u3001\u307e\u305f\u306f\u305d\u306e\u4e21\u65b9\u304c\u7570\u306a\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>int sum(int a, int b) {\n    return a + b;\n}\n\nint sum(int a, int b, int c) {\n    return a + b + c;\n}\n</code></pre> <p>\u3053\u308c\u306b\u3088\u308a\u3001\u7570\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3082\u3064\u540c\u540d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#46","title":"4.6 \u5b9f\u8df5\u7684\u306a\u30b3\u30fc\u30c9\u4f8b","text":"<p>\u4ee5\u4e0b\u306f\u5b9f\u969b\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u7c21\u5358\u306a\u8a08\u7b97\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\u3067\u3059\u3002\u3053\u306e\u30b3\u30fc\u30c9\u3092\u8a66\u3057\u3066\u307f\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u3092\u7406\u89e3\u3057\u307e\u3057\u3087\u3046\u3002</p> <pre><code>public class Calculator {\n\n    // 1. \u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\n    public static int add(int a, int b) {\n        return a + b;\n    }\n\n    public static int subtract(int a, int b) {\n        return a - b;\n    }\n\n    public static int multiply(int a, int b) {\n        return a * b;\n    }\n\n    public static double divide(int a, int b) {\n        if (b == 0) {\n            throw new IllegalArgumentException(\"\u9664\u6570\u306f0\u3067\u306f\u3044\u3051\u307e\u305b\u3093\");\n        }\n        return (double) a / b;\n    }\n\n    // 2. \u30e1\u30a4\u30f3\u30e1\u30bd\u30c3\u30c9\u3067\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\n    public static void main(String[] args) {\n        int sum = add(10, 5);\n        int difference = subtract(10, 5);\n        int product = multiply(10, 5);\n        double quotient = divide(10, 5);\n\n        System.out.println(\"\u548c: \" + sum);\n        System.out.println(\"\u5dee: \" + difference);\n        System.out.println(\"\u7a4d: \" + product);\n        System.out.println(\"\u5546: \" + quotient);\n    }\n}\n</code></pre> <p>\u3053\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u306f\u3001\u8db3\u3057\u7b97\u3001\u5f15\u304d\u7b97\u3001\u639b\u3051\u7b97\u3001\u5272\u308a\u7b97\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3089\u3092 <code>main</code> \u30e1\u30bd\u30c3\u30c9\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u5f15\u6570\u3084\u623b\u308a\u5024\u3001\u4f8b\u5916\u51e6\u7406\u3092\u542b\u3080\u30e1\u30bd\u30c3\u30c9\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u3082\u5b9f\u8df5\u7684\u306b\u5b66\u3079\u307e\u3059\u3002</p> <p>\u3053\u306e\u8cc7\u6599\u3092\u901a\u3058\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u57fa\u672c\u7684\u306a\u6982\u5ff5\u3001\u305d\u306e\u5b9a\u7fa9\u3068\u4f7f\u7528\u65b9\u6cd5\u3092\u628a\u63e1\u3057\u3001Java \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u6709\u52b9\u306a\u4f7f\u3044\u65b9\u3092\u5b66\u3093\u3067\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"java/introduction/grammar/#5","title":"5. \u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8","text":"<p>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0(OOP)\u306f\u3001\u73fe\u5b9f\u4e16\u754c\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u6a21\u5023\u3057\u3066\u3001\u3088\u308a\u76f4\u611f\u7684\u3067\u518d\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30d1\u30e9\u30c0\u30a4\u30e0\u3067\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f Java \u306b\u304a\u3051\u308b\u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#51","title":"5.1 \u30af\u30e9\u30b9\u306e\u5b9a\u7fa9","text":"<p>\u30af\u30e9\u30b9\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u8a08\u56f3\u307e\u305f\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3042\u308a\u3001\u30c7\u30fc\u30bf\uff08\u5c5e\u6027\uff09\u3068\u632f\u308b\u821e\u3044\uff08\u30e1\u30bd\u30c3\u30c9\uff09\u3092\u30ab\u30d7\u30bb\u30eb\u5316\u3057\u307e\u3059\u3002</p> <pre><code>public class Car {\n    // Fields, attributes, or properties\n    String color;\n    String brand;\n\n    // Constructor\n    public Car(String color, String brand) {\n        this.color = color;\n        this.brand = brand;\n    }\n\n    // Methods\n    public void displayDetails() {\n        System.out.println(\"Car Color: \" + color + \", Brand: \" + brand);\n    }\n}\n</code></pre>"},{"location":"java/introduction/grammar/#52","title":"5.2 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u3068\u4f7f\u7528","text":"<p>\u30af\u30e9\u30b9\u306b\u57fa\u3065\u3044\u3066\u4f5c\u6210\u3055\u308c\u305f\u5b9f\u4f53\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002<code>new</code> \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u307e\u3059\u3002</p> <pre><code>public class TestCar {\n    public static void main(String[] args) {\n        // Creating an object of the Car class\n        Car myCar = new Car(\"Red\", \"Toyota\");\n\n        // Using the object's method to display details\n        myCar.displayDetails();\n    }\n}\n</code></pre> <p>\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001<code>myCar</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8a73\u7d30\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"java/introduction/grammar/#53","title":"5.3 \u30e1\u30f3\u30d0\u5909\u6570\u3068\u30e1\u30bd\u30c3\u30c9","text":"<p>\u30e1\u30f3\u30d0\u5909\u6570\u306f\u30af\u30e9\u30b9\u5185\u306b\u683c\u7d0d\u3055\u308c\u308b\u30c7\u30fc\u30bf\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u306f\u30af\u30e9\u30b9\u304c\u884c\u3046\u64cd\u4f5c\u3067\u3059\u3002</p>"},{"location":"java/introduction/grammar/#531","title":"5.3.1 \u30e1\u30f3\u30d0\u5909\u6570","text":"<pre><code>public class Student {\n    String name;\n    int age;\n    double gpa;\n\n    // Student\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30e1\u30bd\u30c3\u30c9\u306f\u7701\u7565\n}\n</code></pre>"},{"location":"java/introduction/grammar/#532","title":"5.3.2 \u30e1\u30bd\u30c3\u30c9","text":"<pre><code>public class Student {\n\n    // \u30e1\u30f3\u30d0\u5909\u6570\u5b9a\u7fa9\u306f\u7701\u7565\n\n    // \u30e1\u30bd\u30c3\u30c9: \u5b66\u751f\u306e\u8a73\u7d30\u3092\u8868\u793a\u3059\u308b\n    public void displayDetails() {\n        System.out.println(\"Name: \" + name + \", Age: \" + age + \", GPA: \" + gpa);\n    }\n}\n</code></pre>"},{"location":"java/introduction/grammar/#54","title":"5.4 \u30ab\u30d7\u30bb\u30eb\u5316","text":"<p>\u30ab\u30d7\u30bb\u30eb\u5316\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u96a0\u853d\u3057\u3001\u5916\u90e8\u304b\u3089\u306e\u76f4\u63a5\u7684\u306a\u30a2\u30af\u30bb\u30b9\u3092\u5236\u9650\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002</p> <pre><code>public class Person {\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    // \u30b2\u30c3\u30bf\u30fc\n    public String getName() {\n        return name;\n    }\n\n    // \u30bb\u30c3\u30bf\u30fc\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    // \u5e74\u9f62\u95a2\u9023\u306e\u30b2\u30c3\u30bf\u30fc\u3068\u30bb\u30c3\u30bf\u30fc\u306f\u7701\u7565\n}\n</code></pre>"},{"location":"java/introduction/grammar/#55-this","title":"5.5 this \u30ad\u30fc\u30ef\u30fc\u30c9","text":"<p><code>this</code> \u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u73fe\u5728\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u30af\u30e9\u30b9\u5185\u3067\u30e1\u30f3\u30d0\u5909\u6570\u3068\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3092\u533a\u5225\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>public class Rectangle {\n    private double width;\n    private double height;\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    // \u30e1\u30bd\u30c3\u30c9\u3068\u4ed6\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u7701\u7565\n}\n</code></pre>"},{"location":"java/introduction/grammar/#56","title":"5.6 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u76f8\u4e92\u4f5c\u7528","text":"<p>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u3092\u901a\u3058\u3066\u76f8\u4e92\u4f5c\u7528\u3057\u307e\u3059\u3002</p> <pre><code>public class Library {\n    String address;\n    ArrayList&lt;Book&gt; books;\n\n    // Library\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30e1\u30bd\u30c3\u30c9\u306f\u7701\u7565\n\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u9593\u306e\u76f8\u4e92\u4f5c\u7528\u306e\u4f8b - Book\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    public void addBook(Book book) {\n        books.add(book);\n    }\n}\n</code></pre> <p>\u3053\u306e\u7ae0\u3067\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u57fa\u672c\u7684\u306a\u69cb\u9020\u3068\u4e3b\u8981\u306a\u6982\u5ff5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u3001\u5b9f\u884c\u3057\u3066\u307f\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"java/ip/","title":"Java \u306b\u3088\u308b\u753b\u50cf\u51e6\u7406\u5165\u9580","text":"<p>\u307e\u3060</p>"},{"location":"java/ip/basic/","title":"\u753b\u50cf\u51e6\u7406\u306e\u57fa\u790e","text":"<p>\u307e\u3060</p>"},{"location":"java/ip/imageio/","title":"\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u5165\u51fa\u529b","text":"<p>\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u57fa\u672c\u7684\u306a\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u5165\u51fa\u529b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"java/opencv/","title":"OpenCV \u5165\u9580","text":""},{"location":"java/opencv/#java-opencv","title":"Java \u3068 OpenCV \u306e\u57fa\u672c","text":"<p>\u3053\u3053\u3067\u306f\u3001Java \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067 OpenCV\uff08\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u57fa\u672c\u3092\u5b66\u3073\u307e\u3059\u3002OpenCV \u306f\u753b\u50cf\u51e6\u7406\u3084\u30de\u30b7\u30f3\u30d3\u30b8\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5e83\u304f\u4f7f\u308f\u308c\u3066\u304a\u308a\u3001Java \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7d44\u307f\u8fbc\u3080\u3053\u3068\u3067\u3001\u753b\u50cf\u89e3\u6790\u3084\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u8ffd\u8de1\u306a\u3069\u3055\u307e\u3056\u307e\u306a\u6a5f\u80fd\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"java/opencv/#opencv_1","title":"OpenCV \u3068\u306f","text":"<p>OpenCV\uff08Open Source Computer Vision Library\uff09\u306f\u3001\u30de\u30b7\u30f3\u30d3\u30b8\u30e7\u30f3\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u3001\u753b\u50cf\u51e6\u7406\u5206\u91ce\u306b\u304a\u3051\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002C++\u3092\u4f7f\u3063\u3066\u8a18\u8ff0\u3055\u308c\u305f OpenCV \u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u9ad8\u304f\u3001Java\u3001Python\u3001Ruby \u306a\u3069\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u591a\u304f\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"java/opencv/#opencv-java","title":"OpenCV \u3068 Java \u306e\u95a2\u4fc2","text":"<p>Java \u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u305f OpenCV \u306f\u3001Java Native Interface\uff08JNI\uff09\u3092\u4ecb\u3057\u3066 C++ \u306e OpenCV \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u3088\u308a\u6a5f\u80fd\u3057\u307e\u3059\u3002Java \u306e\u30d0\u30fc\u30c1\u30e3\u30eb\u30de\u30b7\u30f3\u306e\u4e0a\u3067\u7a3c\u50cd\u3057\u3001\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u306e\u958b\u767a\u304c\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"java/opencv/#_1","title":"\u30b3\u30f3\u30c6\u30f3\u30c4","text":"<ol> <li> <p>OpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u57fa\u672c </p> </li> <li> <p>\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u8868\u793a </p> </li> <li> <p>\u8272\u7a7a\u9593 </p> </li> <li> <p>\u753b\u7d20\u5024\u306e\u64cd\u4f5c </p> </li> <li> <p>\u4e8c\u5024\u5316 </p> </li> <li> <p>\u30d5\u30a3\u30eb\u30bf\u51e6\u7406 </p> </li> <li> <p>\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97 </p> </li> <li> <p>\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 </p> </li> <li> <p>\u5fdc\u7528 </p> </li> </ol>"},{"location":"java/opencv/advanced/","title":"\u5fdc\u7528","text":"<p>\uff08\u6e96\u5099\u4e2d\uff09</p> <p></p>"},{"location":"java/opencv/color/","title":"\u8272\u7a7a\u9593\u306e\u5909\u63db","text":"<p>\u753b\u50cf\u51e6\u7406\u3067\u306f\u3001\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u8868\u73fe\u3092\u3042\u308b\u8272\u7a7a\u9593\u304b\u3089\u5225\u306e\u8272\u7a7a\u9593\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3088\u304f\u884c\u308f\u308c\u307e\u3059\u3002 \u5178\u578b\u7684\u306a\u5909\u63db\u306b\u306f\u3001RGB \u304b\u3089\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3001HSV \u307e\u305f\u306f YCrCb \u3078\u306e\u5909\u63db\u304c\u3042\u308a\u307e\u3059\u3002OpenCV \u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8272\u7a7a\u9593\u304c BGR \u3067\u3042\u308b\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002</p>"},{"location":"java/opencv/color/#_2","title":"\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db","text":"<p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30ab\u30e9\u30fc\uff08BGR\uff09\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u306b\u5909\u63db\u3059\u308b\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u5143\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\nMat color = Imgcodecs.imread(\"input.png\");\n\n// \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\u3092\u4f5c\u6210\nMat gray = new Mat();\n\n// BGR \u304b\u3089\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3078\u306e\u5909\u63db\nImgproc.cvtColor(color, gray, Imgproc.COLOR_BGR2GRAY);\n\n// \u753b\u50cf\u3092\u4fdd\u5b58\nImgcodecs.imwrite(\"grayscale.png\", gray);\n</code></pre> <p><code>Improc.cvtColor</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u3001\u3055\u307e\u3056\u307e\u306a\u8272\u7a7a\u9593\u306e\u5909\u63db\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u307e\u305f\u3001\u306f\u3058\u3081\u304b\u3089\u7279\u5b9a\u306e\u8272\u7a7a\u9593\u3067\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307e\u305b\u305f\u3044\u5834\u5408\u306f\u3001<code>imread</code> \u306e\u7b2c 2 \u5f15\u6570\u306b\u8272\u7a7a\u9593\u306e\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u3068\u3057\u3066\u8aad\u307f\u8fbc\u307e\u305b\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002</p> <pre><code>Mat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n</code></pre> <p>\u5f53\u7814\u7a76\u5ba4\u3067\u306f\u4e3b\u306b CT \u30c7\u30fc\u30bf\u3092\u6271\u3046\u305f\u3081\u3001\u57fa\u672c\u7684\u306b\u306f\u3053\u306e\u66f8\u304d\u65b9\u3092\u884c\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"java/opencv/color/#_3","title":"\u8272\u7a7a\u9593\u306e\u30ea\u30b9\u30c8","text":"<p>Color Space Conversions \u3067\u306f\u3001OpenCV \u3067\u5909\u63db\u53ef\u80fd\u306a\u8272\u7a7a\u9593\u306e\u30ea\u30b9\u30c8\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u3055\u3089\u306b Color conversions \u3067\u306f\u3001\u4ee3\u8868\u7684\u306a\u8272\u5909\u63db\u306e\u7406\u8ad6\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p>"},{"location":"java/opencv/filter/","title":"\u30d5\u30a3\u30eb\u30bf\u51e6\u7406","text":"<p>\u753b\u50cf\u51e6\u7406\u306b\u304a\u3051\u308b\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u306f\u3001\u30ce\u30a4\u30ba\u306e\u9664\u53bb\u3001\u30a8\u30c3\u30b8\u691c\u51fa\u3001\u7279\u5fb4\u5f37\u8abf\u306a\u3069\u3001\u753b\u50cf\u306e\u54c1\u8cea\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306b\u4e0d\u53ef\u6b20\u306a\u6280\u8853\u3067\u3059\u3002 \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u57fa\u672c\u7684\u306a\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u306b\u3064\u3044\u3066\u3001Java \u3068 OpenCV \u3092\u5229\u7528\u3057\u3066\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"java/opencv/filter/#_1","title":"\u30d5\u30a3\u30eb\u30bf\u306e\u7a2e\u985e","text":"<p>\u30d5\u30a3\u30eb\u30bf\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3055\u307e\u3056\u307e\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u591a\u304f\u306f\u30d5\u30a3\u30eb\u30bf\uff08\u30ab\u30fc\u30cd\u30eb\uff09\u306e\u5f62\u304c\u7570\u306a\u308b\u3060\u3051\u3067\u3001\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u306f\u540c\u3058\u3067\u3059\u3002\u753b\u50cf\u306b\u5bfe\u3057\u3066\u4e88\u3081\u6c7a\u3081\u3089\u308c\u305f\u30d5\u30a3\u30eb\u30bf\u3067\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\uff08\u7573\u307f\u8fbc\u307f\uff09\u6f14\u7b97\u3059\u308b\u3053\u3068\u3092\u7dda\u5f62\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3001\u5358\u7d14\u306a\u7dda\u5f62\u6f14\u7b97\u306b\u3088\u3089\u306a\u3044\u3082\u306e\u3092\u975e\u7dda\u5f62\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3068\u547c\u3073\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30d5\u30a3\u30eb\u30bf\u4f8b\u3067\u306f\u3001\u300c\u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u300d\u300c\u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u30d5\u30a3\u30eb\u30bf\u300d\u304c\u975e\u7dda\u5f62\u30d5\u30a3\u30eb\u30bf\u306b\u5206\u985e\u3055\u308c\u307e\u3059\u3002</p> <p>\u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf</p> <ul> <li>\u5e73\u5747\u5024\uff08\u52a0\u91cd\u5e73\u5747\uff09\u30d5\u30a3\u30eb\u30bf</li> <li>\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf</li> <li>\u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf</li> </ul> <p>\u9bae\u92ed\u5316\u30d5\u30a3\u30eb\u30bf</p> <ul> <li>\u30bd\u30fc\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf</li> <li>\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf</li> </ul> <p>\u305d\u306e\u4ed6\u306e\u30d5\u30a3\u30eb\u30bf</p> <ul> <li>\u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u30d5\u30a3\u30eb\u30bf</li> </ul>"},{"location":"java/opencv/filter/#_2","title":"\u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf","text":"<p>\u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u306f\u30d6\u30e9\u30fc\u51e6\u7406\u3068\u3082\u547c\u3070\u308c\u3001\u6307\u5b9a\u3057\u305f\u30d5\u30a3\u30eb\u30bf\u3067\u753b\u50cf\u3092\u6ed1\u3089\u304b\u306b\u3059\u308b\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002</p>"},{"location":"java/opencv/filter/#_3","title":"\u5e73\u5747\u5024\u30d5\u30a3\u30eb\u30bf","text":"<p>\u6700\u3082\u5358\u7d14\u306a\u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308b\u5e73\u5747\u5024\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\u306b\u57fa\u3065\u3044\u3066\u3001\u5468\u56f2\u306e\u753b\u7d20\u306e\u5e73\u5747\u5024\u306b\u73fe\u5728\u306e\u753b\u7d20\u3092\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\u5e73\u5747\u5024\u30d5\u30a3\u30eb\u30bf\u306f <code>Imgproc.blur</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001<code>5 x 5</code> \u306e\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\u306e\u5e73\u5747\u5024\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u5e73\u5747\u5024\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\nMat filteredImage = new Mat();\nImgproc.blur(image, filteredImage, new Size(5, 5));\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u5e73\u5747\u5024\u30d5\u30a3\u30eb\u30bf\", filteredImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p>"},{"location":"java/opencv/filter/#_4","title":"\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf","text":"<p>\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u30ac\u30a6\u30b9\u5206\u5e03\u3092\u4f7f\u7528\u3057\u3066\u5468\u56f2\u306e\u753b\u7d20\u306e\u52a0\u91cd\u5e73\u5747\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u5358\u7d14\u306a\u5e73\u5747\u5024\u30d5\u30a3\u30eb\u30bf\u3088\u308a\u3082\u81ea\u7136\u306a\u307c\u304b\u3057\u3092\u751f\u6210\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306f\u3001<code>Imgproc.GaussianBlur</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\u3001\u7b2c 4 \u5f15\u6570\u306b\u306f\u30ac\u30a6\u30b9\u5206\u5e03\u306e\u6a19\u6e96\u504f\u5dee\u306e\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6a19\u6e96\u504f\u5dee\u306e\u5024\u306f\u5927\u304d\u304f\u3059\u308b\u307b\u3069\u307c\u3051\u306e\u5f37\u5ea6\u304c\u9ad8\u304f\u306a\u308b\u3082\u306e\u3067\u3001<code>-1</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\u304b\u3089\u81ea\u52d5\u7684\u306b\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\nMat filteredImage = new Mat();\nImgproc.GaussianBlur(image, filteredImage, new Size(15, 15), -1);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\", filteredImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p>"},{"location":"java/opencv/filter/#_5","title":"\u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf","text":"<p>\u30e1\u30c7\u30a3\u30a2\u30f3\uff08\u4e2d\u592e\u5024\uff09\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u5468\u56f2\u306e\u753b\u7d20\u5024\u306e\u4e2d\u592e\u5024\u3092\u73fe\u5728\u306e\u30d4\u30af\u30bb\u30eb\u5024\u3068\u7f6e\u304d\u63db\u3048\u308b\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30eb\u30bf\u306f\u7279\u306b\u3001\u3054\u307e\u5869\u30ce\u30a4\u30ba\u306e\u9664\u53bb\u306b\u52b9\u679c\u7684\u3067\u3042\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u307e\u3059\u3002 \u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306f\u3001<code>Imgproc.medialBlur</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\uff08\u5947\u6570\u306e\u6574\u6570\u5024\uff09\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\nMat filteredImage = new Mat();\nImgproc.medianBlur(image, filteredImage, 5);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\", filteredImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p>"},{"location":"java/opencv/filter/#_6","title":"\u9bae\u92ed\u5316\u30d5\u30a3\u30eb\u30bf","text":"<p>\u9bae\u92ed\u5316\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u30a8\u30c3\u30b8\u691c\u51fa\u3084\u753b\u50cf\u7279\u5fb4\u306e\u5f37\u8abf\u306b\u5229\u7528\u3055\u308c\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3059\u3002 \u57fa\u672c\u7684\u306a\u539f\u7406\u306f\u3001\u753b\u7d20\u306e\u660e\u308b\u3055\u306e\u52fe\u914d\u3092\u8a08\u6e2c\u3057\u3001\u7279\u5b9a\u306e\u3057\u304d\u3044\u5024\u4ee5\u4e0a\u306e\u52fe\u914d\u3092\u30a8\u30c3\u30b8\u3068\u3057\u3066\u691c\u51fa\u307e\u305f\u306f\u5f37\u8abf\u3055\u305b\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002</p>"},{"location":"java/opencv/filter/#_7","title":"\u30bd\u30fc\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf","text":"<p>\u30bd\u30fc\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u6c34\u5e73\u65b9\u5411\u3084\u5782\u76f4\u65b9\u5411\u306e\u30a8\u30c3\u30b8\u3092\u691c\u51fa\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002 \u30bd\u30fc\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf\u306f <code>Imgproc.Sobel</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u6df1\u5ea6\u3001\u7b2c 4 \u5f15\u6570\u306b\u306f x \u65b9\u5411\u306e\u5fae\u5206\u6b21\u6570\u3001\u7b2c 5 \u5f15\u6570\u306b\u306f y \u65b9\u5411\u306e\u5fae\u5206\u6b21\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u30bd\u30fc\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u30bd\u30fc\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\nMat filteredImage = new Mat();\nImgproc.Sobel(image, filteredImage, image.type(), 1, 0);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30bd\u30fc\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf\", filteredImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p>"},{"location":"java/opencv/filter/#_8","title":"\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf","text":"<p>\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u4e8c\u6b21\u5fae\u5206\u30d5\u30a3\u30eb\u30bf\u3068\u3082\u547c\u3070\u308c\u3001\u753b\u50cf\u306e\u4e8c\u6b21\u5fae\u5206\u304c\u30bc\u30ed\u3092\u901a\u904e\u3059\u308b\u70b9\u3092\u30a8\u30c3\u30b8\u3068\u3057\u3066\u691c\u51fa\u3057\u307e\u3059\u3002 \u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306f <code>Imgproc.Laplacian</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u6df1\u5ea6\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\nMat filteredImage = new Mat();\nImgproc.Laplacian(image, filteredImage, image.type());\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\", filteredImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p>"},{"location":"java/opencv/filter/#canny","title":"Canny \u30a8\u30c3\u30b8\u691c\u51fa","text":"<p>Canny \u30a8\u30c3\u30b8\u691c\u51fa\u306f\u3001\u30ce\u30a4\u30ba\u304c\u591a\u3044\u753b\u50cf\u3067\u3082\u7cbe\u5ea6\u826f\u304f\u30a8\u30c3\u30b8\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u9ad8\u5ea6\u306a\u65b9\u6cd5\u3067\u3059\u3002 \u30a8\u30c3\u30b8\u691c\u51fa\u306b\u304a\u3044\u3066\u975e\u5e38\u306b\u9ad8\u3044\u4fe1\u983c\u6027\u3092\u6301\u3061\u3001\u9ad8\u901f\u304b\u3064\u660e\u77ad\u3067\u9023\u7d9a\u6027\u306e\u3042\u308b\u30a8\u30c3\u30b8\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304b\u3089\u3001\u4eca\u65e5\u3067\u3082\u3055\u307e\u3056\u307e\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Canny \u30a8\u30c3\u30b8\u691c\u51fa\u306f\u3001<code>Imgproc.Canny</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u30a8\u30c3\u30b8\u3068\u5224\u5b9a\u3059\u308b\u3057\u304d\u3044\u5024\u306e\u4e0b\u9650\u3001\u7b2c 4 \u5f15\u6570\u306b\u306f\u30a8\u30c3\u30b8\u3068\u5224\u5b9a\u3059\u308b\u3057\u304d\u3044\u5024\u306e\u4e0a\u9650\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u307e\u305f\u3001Canny \u30a8\u30c3\u30b8\u691c\u51fa\u306f\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306a\u3069\u306e\u5e73\u6ed1\u5316\u30d5\u30a3\u30eb\u30bf\u3068\u4f75\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u9ad8\u3044\u52b9\u679c\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001Canny \u30a8\u30c3\u30b8\u691c\u51fa\u3092\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\nMat bluredImage = new Mat();\nImgproc.GaussianBlur(image, bluredImage, new Size(5, 5), -1);\n\n// Canny \u30a8\u30c3\u30b8\u691c\u51fa\nMat filteredImage = new Mat();\nImgproc.Canny(bluredImage, filteredImage, 100, 200);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"Canny \u30a8\u30c3\u30b8\u691c\u51fa\", filteredImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p>"},{"location":"java/opencv/filter/#_9","title":"\u305d\u306e\u4ed6\u306e\u30d5\u30a3\u30eb\u30bf","text":"<p>OpenCV \u306b\u306f\u305d\u306e\u4ed6\u306b\u3082\u3055\u307e\u3056\u307e\u306a\u30d5\u30a3\u30eb\u30bf\u304c\u5229\u7528\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"java/opencv/filter/#_10","title":"\u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u30d5\u30a3\u30eb\u30bf","text":"<p>\u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u30d5\u30a3\u30eb\u30bf\u306f\u3001\u30a8\u30c3\u30b8\u306e\u60c5\u5831\u3092\u4fdd\u3064\u306a\u304c\u3089\u3001\u5e73\u6ed1\u5316\u3092\u884c\u3046\u975e\u7dda\u5f62\u30d5\u30a3\u30eb\u30bf\u3067\u3042\u308a\u3001\u7a7a\u9593\u7684\u306a\u8fd1\u3055\u3068\u753b\u7d20\u5024\u306e\u985e\u4f3c\u6027\u306e\u4e21\u65b9\u306b\u57fa\u3065\u3044\u3066\u91cd\u307f\u4ed8\u3051\u3092\u884c\u3044\u307e\u3059\u3002 \u30ce\u30a4\u30ba\u3092\u52b9\u679c\u7684\u306b\u9664\u53bb\u3057\u3064\u3064\u3001\u91cd\u8981\u306a\u69cb\u9020\u7684\u7279\u5fb4\u3092\u9bae\u660e\u306b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u7279\u5fb4\u304b\u3089\u3001\u3055\u307e\u3056\u307e\u306a\u5fdc\u7528\u5206\u91ce\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u30d5\u30a3\u30eb\u30bf\u306f\u3001<code>Imgproc.bilateralFilter</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u30d5\u30a3\u30eb\u30bf\u306e\u76f4\u5f84\u3001\u7b2c 4 \u5f15\u6570\u306b\u306f\u8272\u7a7a\u9593\u306e\u6a19\u6e96\u504f\u5dee\u3001\u7b2c 5 \u5f15\u6570\u306b\u306f\u5ea7\u6a19\u7a7a\u9593\u306e\u6a19\u6e96\u504f\u5dee\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u30d5\u30a3\u30eb\u30bf\u3092\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u30d5\u30a3\u30eb\u30bf\u306e\u9069\u7528\nMat filteredImage = new Mat();\nImgproc.bilateralFilter(image, filteredImage, 10, 50, 50);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u30d5\u30a3\u30eb\u30bf\", filteredImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p>"},{"location":"java/opencv/filter/#_11","title":"\u4efb\u610f\u306e\u7dda\u5f62\u30d5\u30a3\u30eb\u30bf","text":"<p>OpenCV \u306b\u306f\u3055\u307e\u3056\u307e\u306a\u30d7\u30ea\u30bb\u30c3\u30c8\u30d5\u30a3\u30eb\u30bf\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u81ea\u5206\u3067\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u8a08\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u81ea\u4f5c\u3057\u305f <code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7dda\u5f62\u30d5\u30a3\u30eb\u30bf\u306f\u3001<code>filter2D</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u6df1\u5ea6\uff08\u5165\u529b\u753b\u50cf\u3068\u540c\u3058\u5834\u5408\u306f <code>-1</code>\uff09\u3001\u7b2c 4 \u5f15\u6570\u306b\u306f\u30d5\u30a3\u30eb\u30bf\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001<code>3 x 3</code> \u306e 8 \u8fd1\u508d\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\uff08\u30ab\u30fc\u30cd\u30eb\uff09\u3092\u81ea\u4f5c\u3057\u3001\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u30ab\u30fc\u30cd\u30eb\u306e\u4f5c\u6210\uff088\u8fd1\u508d\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\uff09\nMat kernel = new Mat(3, 3, CvType.CV_32F) {\n    {\n        put(0, 0, 1);\n        put(0, 1, 1);\n        put(0, 2, 1);\n        put(1, 0, 1);\n        put(1, 1, -8);\n        put(1, 2, 1);\n        put(2, 0, 1);\n        put(2, 1, 1);\n        put(2, 2, 1);\n    }\n};\n// \u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\nMat filteredImage = new Mat();\nImgproc.filter2D(image, filteredImage, -1, kernel);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\", filteredImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p> <p></p>"},{"location":"java/opencv/imread/","title":"OpenCV \u3067\u306e\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u8868\u793a","text":"<p>\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f Java \u3092\u4f7f\u7528\u3057\u3066 OpenCV \u3067\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\u3001\u8868\u793a\u3059\u308b\u57fa\u672c\u7684\u306a\u65b9\u6cd5\u3092\u5b66\u3093\u3067\u3044\u304d\u307e\u3059\u3002</p>"},{"location":"java/opencv/imread/#opencv_1","title":"OpenCV \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8","text":"<p>\u901a\u5e38\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a import \u6587\u3067 OpenCV \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002</p> <pre><code>import org.opencv.core.Core;\nimport org.opencv.core.Mat;\nimport org.opencv.imgcodecs.Imgcodecs;\n</code></pre> <p>\u3053\u308c\u306b\u3088\u308a\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u8868\u3059 <code>Mat</code> \u30af\u30e9\u30b9\u3084\u753b\u50cf\u306e\u8aad\u307f\u66f8\u304d\u3092\u884c\u3046 <code>Imgcodecs</code> \u30af\u30e9\u30b9\u306a\u3069\u3001\u5fc5\u8981\u306a OpenCV \u306e\u6a5f\u80fd\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"java/opencv/imread/#opencv_2","title":"OpenCV \u306b\u3088\u308b\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f","text":"<p>Java \u3067 OpenCV \u3092\u4f7f\u3063\u3066\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u3001<code>Imgcodecs</code> \u30af\u30e9\u30b9\u306e <code>imread</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306b\u3042\u308b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001<code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u8fd4\u3059\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u4ee5\u4e0b\u306b\u3001\u8aad\u307f\u8fbc\u307f\u306e\u57fa\u672c\u7684\u306a\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002</p> <pre><code>System.loadLibrary(Core.NATIVE_LIBRARY_NAME);\nString imageFilePath = \"./image.png\";\nMat image = Imgcodecs.imread(imageFilePath);\n</code></pre> <p><code>System.loadLibrary(Core.NATIVE_LIBRARY_NAME);</code> \u306b\u3088\u3063\u3066\u3001OpenCV \u306e\u30cd\u30a4\u30c6\u30a3\u30d6\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002 \u3053\u308c\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb\u6642\u306b\u4e00\u5ea6\u3060\u3051\u5b9f\u884c\u3059\u308c\u3070 OK \u3067\u3059\u3002</p>"},{"location":"java/opencv/imread/#ct","title":"\u982d\u90e8 CT \u753b\u50cf\uff08\u30d5\u30ea\u30fc\u7d20\u6750\uff09","text":"<p>\u4ee5\u4e0b\u3067\u306f\u79c1\u306e\u982d\u90e8 CT \u753b\u50cf\uff08KanoHead.png\u3001\u30d5\u30ea\u30fc\u7d20\u6750\uff09\u3092\u4f7f\u3063\u3066\u3044\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"java/opencv/imread/#opencv_3","title":"OpenCV \u306b\u3088\u308b\u753b\u50cf\u306e\u8868\u793a","text":"<p>OpenCV \u5358\u4f53\u3067\u3082\u3001<code>HighGui</code> \u30af\u30e9\u30b9\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u7c21\u6613\u7684\u306b\u753b\u50cf\u306e\u8868\u793a\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u672c\u30b5\u30a4\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001\u8a18\u8ff0\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u57fa\u672c\u7684\u306b\u306f <code>HighGui</code> \u30af\u30e9\u30b9\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u304c\u3001\u9ad8\u5ea6\u306a GUI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001Swing \u306a\u3069\u306e GUI \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f75\u7528\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p><code>HighGui</code> \u30af\u30e9\u30b9\u3092\u7528\u3044\u305f\u753b\u50cf\u306e\u8868\u793a\u306f\u3001<code>imshow</code> \u30e1\u30bd\u30c3\u30c9\u3067\u884c\u3044\u3001\u76f4\u5f8c\u306b <code>waitKey</code> \u30e1\u30bd\u30c3\u30c9\u3092\u7f6e\u304f\u3053\u3068\u3067\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>import org.opencv.core.Core;\nimport org.opencv.core.Mat;\nimport org.opencv.highgui.HighGui;\nimport org.opencv.imgcodecs.Imgcodecs;\n\npublic class Main {\n    public static void main(String[] args) {\n        // \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\n        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n        // \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\n        Mat image = Imgcodecs.imread(\"KanoHead.png\");\n\n        // \u753b\u50cf\u306e\u8868\u793a\n        HighGui.imshow(\"HighGui \u306b\u3088\u308b\u753b\u50cf\u306e\u8868\u793a\", image);\n        HighGui.waitKey();\n        System.exit(0);\n    }\n}\n</code></pre> <p>\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002</p> <p></p>"},{"location":"java/opencv/imread/#swing","title":"Swing \u306b\u3088\u308b\u753b\u50cf\u306e\u8868\u793a","text":"<p>\u5b9f\u969b\u306e Java \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u306b\u304a\u3044\u3066\u306f\u3001Swing \u306a\u3069\u306e GUI \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002 \u305d\u306e\u305f\u3081\u3001\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b\u753b\u50cf\u3092\u63cf\u753b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u4ee5\u4e0b\u3067\u306f\u3001NetBeans \u306e GUI \u30c7\u30b6\u30a4\u30ca\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u60f3\u5b9a\u3067\u8a71\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002 \u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3001<code>JFrame</code> \u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b <code>JLabel</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8cbc\u308a\u4ed8\u3051\u307e\u3057\u3087\u3046\u3002 <code>JFrame</code> \u306e\u540d\u524d\u306f <code>FrameMain</code>\u3001<code>JLabel</code> \u306e\u540d\u524d\u306f <code>lblDraw</code>\u3001\u30b5\u30a4\u30ba\u306f <code>512 x 512</code> \u3068\u3057\u3066\u3044\u307e\u3059\u3002</p> <p></p>"},{"location":"java/opencv/imread/#jlabel","title":"JLabel \u3078\u306e\u753b\u50cf\u8868\u793a","text":"<p>NetBeans \u3067 <code>JFrame</code> \u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u4e2d\u306b GUI \u306e\u63cf\u753b\u3092\u884c\u3046 <code>initComponents</code> \u30e1\u30bd\u30c3\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u5f8c\u308d\u306b\u3001OpenCV \u306e\u7c21\u5358\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <pre><code>initComponents();   // \u6700\u521d\u304b\u3089\u542b\u307e\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\n\n// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\");\n\n// \u753b\u50cf\u306e\u8868\u793a\nlblDraw.setIcon(new ImageIcon(HighGui.toBufferedImage(image)));\n</code></pre> <p>\u3053\u3053\u3067 <code>toBufferedImage</code> \u306f <code>Mat</code> \u3092 <code>BufferedImage</code> \u306b\u5909\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3001\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <pre><code>public static Image toBufferedImage(Mat m) {\n    int type = BufferedImage.TYPE_BYTE_GRAY;\n\n    if (m.channels() &gt; 1) {\n        type = BufferedImage.TYPE_3BYTE_BGR;\n    }\n\n    int bufferSize = m.channels() * m.cols() * m.rows();\n    byte[] b = new byte[bufferSize];\n    m.get(0, 0, b); // get all the pixels\n    BufferedImage image = new BufferedImage(m.cols(), m.rows(), type);\n\n    final byte[] targetPixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();\n    System.arraycopy(b, 0, targetPixels, 0, b.length);\n\n    return image;\n}\n</code></pre> <p>\u3053\u3053\u307e\u3067\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3001\u30b7\u30f3\u30dc\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u3053\u306e\u30a8\u30e9\u30fc\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30b3\u30fc\u30c9\u30a8\u30c7\u30a3\u30bf\u306e\u597d\u304d\u306a\u5834\u6240\u3067\u53f3\u30af\u30ea\u30c3\u30af\u3092\u3057\u3001[Fix Imports]\uff08\u30a4\u30f3\u30dd\u30fc\u30c8\u306e\u4fee\u6b63\uff09\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> <p>\u3059\u308b\u3068\u30b3\u30fc\u30c9\u304c\u89e3\u6790\u3055\u308c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5fc5\u8981\u306a <code>import</code> \u6587\u304c\u81ea\u52d5\u633f\u5165\u3055\u308c\u307e\u3059\u3002</p> <pre><code>import java.awt.image.BufferedImage;\nimport java.awt.image.DataBufferByte;\nimport javax.swing.ImageIcon;\nimport org.opencv.core.Core;\nimport org.opencv.core.Mat;\nimport org.opencv.highgui.HighGui;\nimport org.opencv.imgcodecs.Imgcodecs;\n</code></pre> <p>\u30a8\u30e9\u30fc\u304c\u89e3\u6d88\u3055\u308c\u305f\u3089\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <p></p> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u7acb\u3061\u4e0a\u304c\u308a\u3001\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002</p>"},{"location":"java/opencv/imread/#_1","title":"\u5404\u7a2e\u30c7\u30fc\u30bf\u306e\u5909\u63db","text":"<p>\u524d\u7bc0\u3067\u306f\u3001<code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 <code>BufferedImage</code> \u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002 \u305d\u306e\u4ed6\u306b\u3082\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u3055\u307e\u3056\u307e\u306a\u5909\u63db\u304c\u5fc5\u8981\u306b\u306a\u308b\u3053\u3068\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u5e7e\u3064\u304b\u306e\u30c7\u30fc\u30bf\u5909\u63db\u306e\u65b9\u6cd5\u3092\u6574\u7406\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002</p>"},{"location":"java/opencv/imread/#mat","title":"\u914d\u5217\u304b\u3089 Mat \u3078\u306e\u5909\u63db","text":"<p>\u4e8c\u6b21\u5143\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u305f\u914d\u5217\uff08\u69cb\u9020\u81ea\u4f53\u306f\u4e00\u6b21\u5143\uff09\u3092 <code>Mat</code> \u306b\u5909\u63db\u3057\u305f\u3044\u5834\u5408\u306f\u3001<code>Mat</code> \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001<code>put</code> \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066\u60c5\u5831\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>Mat mat = new Mat(rows, cols, type);\nmat.put(row, col, array);\n</code></pre> <p><code>Mat</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u5e7e\u3064\u304b\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u884c\u6570\uff08rows\uff09\u3001\u5217\u6570\uff08cols\uff09\u3001\u7a2e\u985e\uff08type\uff09\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u884c\u6570\u306f\u753b\u50cf\u306e\u9ad8\u3055\u3001\u5217\u6570\u306f\u753b\u50cf\u306e\u5e45\u306b\u76f8\u5f53\u3059\u308b\u70b9\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 <code>put</code> \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3080\u884c\u3068\u5217\u306e\u958b\u59cb\u4f4d\u7f6e\u3001\u304a\u3088\u3073\u914d\u5217\uff08array\uff09\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>Mat mat = new Mat(512, 512, CvType.CV_8U);\nmat.put(0, 0, grayData);\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f\u3001\u89e3\u50cf\u5ea6 <code>512x512</code>\u30018 \u30d3\u30c3\u30c8\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e <code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001 \u305d\u3053\u306b <code>grayData</code> \u3068\u3044\u3046\u540d\u524d\u306e\u914d\u5217\uff08\u3053\u308c\u306f\u5225\u9014\u81ea\u5206\u3067\u7528\u610f\uff09\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002 type \u306e\u4f8b\u3092\u4ee5\u4e0b\u306b\u5e7e\u3064\u304b\u793a\u3057\u307e\u3059\u3002</p> <ul> <li><code>CvType.CV_8U</code> : 8 \u30d3\u30c3\u30c8\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb</li> <li><code>CvType.CV_8UC3</code> : 8 \u30d3\u30c3\u30c8\u30ab\u30e9\u30fc</li> <li><code>CvType.CV_16U</code> : 16 \u30d3\u30c3\u30c8\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb</li> <li><code>CvType.CV_16UC3</code> : 16 \u30d3\u30c3\u30c8\u30ab\u30e9\u30fc</li> <li><code>CvType.CV_32F</code> : 32 \u30d3\u30c3\u30c8\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09</li> <li><code>CvType.CV_32FC3</code> : 32 \u30d3\u30c3\u30c8\u30ab\u30e9\u30fc\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff09</li> </ul>"},{"location":"java/opencv/imread/#mat_1","title":"Mat \u304b\u3089\u914d\u5217\u3078\u306e\u5909\u63db","text":"<p><code>Mat</code> \u304b\u3089\u914d\u5217\u306b\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u305f\u3044\u5834\u5408\u306f\u3001<code>get</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u3001<code>CvType.CV_32F</code> \u306e <code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3001float \u306e\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>float[] imgData = new float[dataWidth * dataHeight];\nrotated.get(0, 0, imgData);\n</code></pre>"},{"location":"java/opencv/imread/#bufferedimage-mat","title":"BufferedImage \u304b\u3089 Mat \u3078\u306e\u5909\u63db","text":"<p><code>BufferedImage</code> \u304b\u3089 <code>Mat</code> \u306b\u5909\u63db\u3059\u308b\u306b\u306f\u3001<code>BufferedImage</code> \u306e\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u914d\u5217\u306b\u5909\u63db\u3057\u3001<code>put</code> \u30e1\u30bd\u30c3\u30c9\u3092\u9069\u7528\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u95a2\u6570\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>public Mat bufferedImageToMat(BufferedImage bi) {\n    Mat mat = new Mat(bi.getHeight(), bi.getWidth(), CvType.CV_8UC3);\n    byte[] data = ((DataBufferByte) bi.getRaster().getDataBuffer()).getData();\n    mat.put(0, 0, data);\n    return mat;\n}\n</code></pre>"},{"location":"java/opencv/imread/#mat-bufferedimage","title":"Mat \u304b\u3089 BufferedImage \u3078\u306e\u5909\u63db","text":"<p><code>Mat</code> \u304b\u3089 <code>BufferedImage</code> \u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u306f\u3001\u524d\u8ff0\u306e\u3068\u304a\u308a\u3001<code>HighGui.toBufferedImage</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\u4ee5\u4e0b\u306f\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>Mat mat = Imgcodecs.imread(\"KanoHead.png\");\nBufferedImage bi = HighGui.toBufferedImage(mat);\n</code></pre>"},{"location":"java/opencv/imread/#_2","title":"\u307e\u3068\u3081","text":"<p>\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001OpenCV \u3092\u7528\u3044\u3066 Java \u3067\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\u3001\u8868\u793a\u30fb\u5909\u63db\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3057\u305f\u3002 \u4ee5\u964d\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001OpenCV \u306b\u3088\u308b\u5177\u4f53\u7684\u306a\u753b\u50cf\u51e6\u7406\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002</p> <p></p>"},{"location":"java/opencv/introduction/","title":"OpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u57fa\u672c","text":""},{"location":"java/opencv/introduction/#opencv_1","title":"OpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>Java \u3067 OpenCV \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u307e\u305a OpenCV \u306e Java \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>OpenCV \u306e\u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\uff08https://opencv.org/releases/\uff09\u304b\u3089 OpenCV \u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u51cd\u3057\u3001<code>opencv/build/java</code> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u898b\u3064\u3051\u307e\u3059\u3002 \u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u308b opencv-XXX.jar \u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 NetBeans \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30a6\u30a3\u30f3\u30c9\u30a6\u306e <code>Libralies</code> \u3092\u53f3\u30af\u30ea\u30c3\u30af \u2192 <code>Add JAR/Folder...</code> \u304b\u3089\u3001JAR \u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>\u307e\u305f\u3001\u540c\u3058<code>opencv/build/java</code> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b libopencv_javaXXX.so\uff08Linux\uff09\u3001opencv_javaXXX.dll\uff08Windows\uff09\u3001\u307e\u305f\u306f libopencv_javaXXX.dylib\uff08Mac\uff09\u306a\u3069\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u30b7\u30b9\u30c6\u30e0\u306e\u30d1\u30b9\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u30d1\u30b9\u3092\u8ffd\u52a0\u3057\u306a\u304f\u3066\u3082\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u3053\u3068\u3067\u3001\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p>"},{"location":"java/opencv/introduction/#opencv_2","title":"OpenCV \u3092\u4f7f\u3063\u3066\u307f\u3088\u3046","text":"<p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u8a66\u3057\u306b\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067 OpenCV \u304c\u6b63\u3057\u304f\u52d5\u4f5c\u3059\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002</p> <pre><code>import org.opencv.core.Core;\nimport org.opencv.core.CvType;\nimport org.opencv.core.Mat;\n\npublic class HelloWorld {\n    static {\n        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n    }\n\n    public static void main(String[] args) {\n        // 3x3 \u306e\u5358\u4f4d\u884c\u5217\u3092\u4f5c\u6210\n        Mat mat = Mat.eye(3, 3, CvType.CV_8UC1);\n        System.out.println(\"mat = \" + mat.dump());\n    }\n}\n</code></pre> <p>\u4e0a\u8a18\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001OpenCV \u306e\u521d\u671f\u5316\u3092\u884c\u3044\u3001<code>3x3</code> \u306e\u5358\u4f4d\u884c\u5217\u3092\u4f5c\u6210\u3057\u3066\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u5358\u4f4d\u884c\u5217\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u3001OpenCV \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u6210\u529f\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"java/opencv/introduction/#opencv_3","title":"\u57fa\u672c\u7684\u306a OpenCV \u306e\u30c7\u30fc\u30bf\u69cb\u9020","text":"<p>OpenCV \u3067\u306f <code>Mat</code> \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u3066\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u6271\u3044\u307e\u3059\u3002<code>Mat</code> \u306f <code>Matrix</code> \u306e\u7565\u3067\u3001\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u5024\u3084\u591a\u6b21\u5143\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\u8272\u3084\u753b\u50cf\u306e\u6df1\u5ea6\u306a\u3069\u3092\u6307\u5b9a\u3067\u304d\u3001\u753b\u50cf\u51e6\u7406\u306e\u57fa\u672c\u3068\u306a\u308b\u91cd\u8981\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002</p> <pre><code>Mat image = new Mat(rows, cols, type);\n</code></pre> <p>\u3053\u306e\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u3067\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u884c\u6570(rows)\u3001\u5217\u6570(cols)\u3067\u3001\u6307\u5b9a\u3055\u308c\u305f\u30bf\u30a4\u30d7(type)\u306e\u65b0\u3057\u3044 <code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u3053\u3053\u307e\u3067\u3067 Java \u3068 OpenCV \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\u3053\u306e\u77e5\u8b58\u3092\u57fa\u306b\u3001\u66f4\u306b\u8a73\u3057\u3044\u753b\u50cf\u51e6\u7406\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u3092\u5b66\u3093\u3067\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002</p> <p></p>"},{"location":"java/opencv/morphology/","title":"\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97","text":"<p>\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\uff08Morphology: \u5f62\u614b\u5b66\uff09\u6f14\u7b97\u306f\u3001\u5f62\u72b6\u30d9\u30fc\u30b9\u306e\u753b\u50cf\u51e6\u7406\u64cd\u4f5c\u306e\u7dcf\u79f0\u3067\u3042\u308a\u3001\u5927\u304d\u304f\u81a8\u5f35\uff08Dilation\uff09\u51e6\u7406\u3068\u53ce\u7e2e\uff08Erosion\uff09\u51e6\u7406\u304c\u3042\u308a\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\uff08Opening\uff09\u3068\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\uff08Closing\uff09\u304c\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u51e6\u7406\u306e\u9069\u7528\u306e\u969b\u306b\u306f\u3001\u69cb\u9020\u5316\u8981\u7d20\uff08kernel\uff09\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p>"},{"location":"java/opencv/morphology/#_1","title":"\u69cb\u9020\u5316\u8981\u7d20","text":"<p>\u69cb\u9020\u5316\u8981\u7d20\uff08Structuring Element\uff09\u306f\u3001\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97\u3092\u9069\u7528\u3059\u308b\u5f62\u306e\u884c\u5217\u3092\u6307\u3057\u307e\u3059\u3002 \u69cb\u9020\u5316\u8981\u7d20\u306e\u5f62\u72b6\u3084\u30b5\u30a4\u30ba\u306b\u3088\u3063\u3066\u3001\u6f14\u7b97\u306e\u7d50\u679c\u3082\u5909\u308f\u3063\u3066\u304d\u307e\u3059\u3002 \u5f62\u72b6\u3068\u3057\u3066\u306f\u300c\u5186\u5f62\u300d\u3084\u300c\u77e9\u5f62\u300d\u304c\u4e00\u822c\u7684\u3067\u3042\u308a\u3001\u72b6\u6cc1\u306b\u3088\u3063\u3066\u306f\u300c\u5341\u5b57\u5f62\u300d\u306a\u3069\u306e\u5f62\u72b6\u304c\u9078\u629e\u3055\u308c\u307e\u3059\u3002</p> <p>\u69cb\u9020\u5316\u8981\u7d20\u306f <code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u304c\u3001\u4ee3\u8868\u7684\u306a\u5f62\u72b6\u3067\u3042\u308c\u3070 <code>Imgproc.getStructuringElement</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u7c21\u5358\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7b2c 1 \u5f15\u6570\u3067\u5f62\u72b6\u3001\u7b2c 2 \u5f15\u6570\u3067\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u69cb\u9020\u5316\u8981\u7d20\u306e <code>Mat</code> \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code>// \u69cb\u9020\u5316\u8981\u7d20\u306e\u4f5c\u6210\nMat kernel = Imgproc.getStructuringElement(Imgproc.MORPH_ELLIPSE, new Size(5, 5));\n</code></pre> <p>\u5f62\u72b6\u306e\u30d5\u30e9\u30b0\u306b\u306f\u5927\u304d\u304f\u4ee5\u4e0b\u306e 3 \u3064\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <ul> <li><code>Imgproc.MORPH_RECT</code>: \u77e9\u5f62</li> <li><code>Imgproc.MORPH_CROSS</code>: \u5341\u5b57\u5f62</li> <li><code>Imgproc.MORPH_ELLIPSE</code>: \u6955\u5186\u5f62</li> </ul>"},{"location":"java/opencv/morphology/#_2","title":"\u81a8\u5f35\u3068\u53ce\u7e2e","text":"<p>\u81a8\u5f35\u3068\u53ce\u7e2e\u306f\u3001\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97\u3092\u69cb\u6210\u3059\u308b\u57fa\u672c\u7684\u306a\u6f14\u7b97\u3067\u3059\u3002</p>"},{"location":"java/opencv/morphology/#dilation","title":"\u81a8\u5f35\uff08Dilation\uff09","text":"<p>\u81a8\u5f35\u306f\u3001\u753b\u50cf\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5883\u754c\u3092\u62e1\u5927\u3057\u307e\u3059\u3002 \u69cb\u9020\u5316\u8981\u7d20\u3092\u7528\u3044\u3066\u753b\u50cf\u4e0a\u3092\u8d70\u67fb\u3057\u3001\u8981\u7d20\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4e00\u90e8\u3067\u3082\u91cd\u306a\u308b\u5834\u5408\u3001\u305d\u306e\u9818\u57df\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u542b\u307e\u308c\u308b\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002 \u81a8\u5f35\u306f <code>Imgproc.dilate</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u69cb\u9020\u5316\u8981\u7d20\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u81a8\u5f35\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u4e8c\u5024\u5316\nMat binaryImage = new Mat();\nImgproc.threshold(image, binaryImage, 180, 255, Imgproc.THRESH_BINARY);\n\n// \u69cb\u9020\u5316\u8981\u7d20\u306e\u4f5c\u6210\nMat kernel = Imgproc.getStructuringElement(Imgproc.MORPH_ELLIPSE, new Size(5, 5));\n\n// \u81a8\u5f35\u51e6\u7406\nMat dst = new Mat();\nImgproc.dilate(binaryImage, dst, kernel);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u81a8\u5f35\", dst);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p> </p>"},{"location":"java/opencv/morphology/#erosion","title":"\u53ce\u7e2e\uff08Erosion\uff09","text":"<p>\u53ce\u7e2e\u306f\u3001\u753b\u50cf\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5883\u754c\u3092\u7e2e\u5c0f\u3057\u307e\u3059\u3002 \u69cb\u9020\u5316\u8981\u7d20\u3092\u7528\u3044\u3066\u753b\u50cf\u4e0a\u3092\u8d70\u67fb\u3057\u3001\u8981\u7d20\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5b8c\u5168\u306b\u53ce\u307e\u308b\u5834\u5408\u306e\u307f\u3001\u305d\u306e\u9818\u57df\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5b58\u5728\u3059\u308b\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002 \u53ce\u7e2e\u306f <code>Imgproc.erode</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u69cb\u9020\u5316\u8981\u7d20\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u53ce\u7e2e\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u4e8c\u5024\u5316\nMat binaryImage = new Mat();\nImgproc.threshold(image, binaryImage, 180, 255, Imgproc.THRESH_BINARY);\n\n// \u69cb\u9020\u5316\u8981\u7d20\u306e\u4f5c\u6210\nMat kernel = Imgproc.getStructuringElement(Imgproc.MORPH_ELLIPSE, new Size(5, 5));\n\n// \u53ce\u7e2e\u51e6\u7406\nMat dst = new Mat();\nImgproc.erode(binaryImage, dst, kernel);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u53ce\u7e2e\", dst);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p> </p>"},{"location":"java/opencv/morphology/#_3","title":"\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u3068\u30af\u30ed\u30fc\u30b8\u30f3\u30b0","text":"<p>\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u3068\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\u306f\u3001\u305d\u308c\u305e\u308c\u53ce\u7e2e\u3068\u81a8\u5f35\u3001\u81a8\u5f35\u3068\u53ce\u7e2e\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u6f14\u7b97\u3067\u3059\u3002 \u3053\u306e\u3088\u3046\u306a\u5fdc\u7528\u7684\u306a\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97\u306f\u3001<code>Imgproc.morphologyEx</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u7b2c 1 \u5f15\u6570\u306b\u306f\u5165\u529b\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u51fa\u529b\u753b\u50cf\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u6f14\u7b97\u306e\u30d5\u30e9\u30b0\u3001\u7b2c 4 \u5f15\u6570\u306b\u306f\u69cb\u9020\u5316\u8981\u7d20\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6f14\u7b97\u306e\u30d5\u30e9\u30b0\u306b\u306f\u3001\u4ee5\u4e0b\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <ul> <li><code>Imgproc.MORPH_OPEN</code>: \u30aa\u30fc\u30d7\u30cb\u30f3\u30b0</li> <li><code>Imgproc.MORPH_CLOSE</code>: \u30af\u30ed\u30fc\u30b8\u30f3\u30b0</li> <li><code>Imgproc.MORPH_GRADIENT</code>: \u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u52fe\u914d</li> <li><code>Imgproc.MORPH_TOPHAT</code>: \u30c8\u30c3\u30d7\u30cf\u30c3\u30c8</li> <li><code>Imgproc.MORPH_BLACKHAT</code>: \u30d6\u30e9\u30c3\u30af\u30cf\u30c3\u30c8</li> <li><code>Imgproc.MORPH_HITMISS</code>: Hit-or-Miss \u5909\u63db</li> </ul>"},{"location":"java/opencv/morphology/#opening","title":"\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\uff08Opening\uff09","text":"<p>\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u306f\u3001\u53ce\u7e2e\u3092\u9069\u7528\u3057\u305f\u3042\u3068\u306b\u81a8\u5f35\u3092\u9069\u7528\u3059\u308b\u6f14\u7b97\u3067\u3001\u5c0f\u3055\u306a\u9818\u57df\u306e\u9664\u53bb\u3084\u5e73\u6ed1\u5316\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u4e8c\u5024\u5316\nMat binaryImage = new Mat();\nImgproc.threshold(image, binaryImage, 180, 255, Imgproc.THRESH_BINARY);\n\n// \u69cb\u9020\u5316\u8981\u7d20\u306e\u4f5c\u6210\nMat kernel = Imgproc.getStructuringElement(Imgproc.MORPH_ELLIPSE, new Size(5, 5));\n\n// \u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u51e6\u7406\nMat dst = new Mat();\nImgproc.morphologyEx(binaryImage, dst, Imgproc.MORPH_OPEN, kernel);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\", dst);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p> </p>"},{"location":"java/opencv/morphology/#closing","title":"\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\uff08Closing\uff09","text":"<p>\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\u306f\u3001\u81a8\u5f35\u3092\u9069\u7528\u3057\u305f\u3042\u3068\u306b\u53ce\u7e2e\u3092\u9069\u7528\u3059\u308b\u6f14\u7b97\u3067\u3001\u5c0f\u3055\u306a\u7a74\u3084\u9699\u9593\u3092\u57cb\u3081\u308b\u306e\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u4e8c\u5024\u5316\nMat binaryImage = new Mat();\nImgproc.threshold(image, binaryImage, 180, 255, Imgproc.THRESH_BINARY);\n\n// \u69cb\u9020\u5316\u8981\u7d20\u306e\u4f5c\u6210\nMat kernel = Imgproc.getStructuringElement(Imgproc.MORPH_ELLIPSE, new Size(5, 5));\n\n// \u30af\u30ed\u30fc\u30b8\u30f3\u30b0\u51e6\u7406\nMat dst = new Mat();\nImgproc.morphologyEx(binaryImage, dst, Imgproc.MORPH_CLOSE, kernel);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\", dst);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p> </p>"},{"location":"java/opencv/morphology/#_4","title":"\u305d\u306e\u4ed6\u306e\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97","text":"<p>OpenCV \u3067\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97\u306b\u306f\u305d\u306e\u4ed6\u306b\u3082\u3001\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u52fe\u914d\u3001\u30c8\u30c3\u30d7\u30cf\u30c3\u30c8\u3001\u30d6\u30e9\u30c3\u30af\u30cf\u30c3\u30c8\u3001Hit-or-Miss \u5909\u63db\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u3067\u306f\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u52fe\u914d\u306b\u3064\u3044\u3066\u3001\u5b9f\u88c5\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u305d\u306e\u4ed6\u306e\u6f14\u7b97\u306b\u3064\u3044\u3066\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"java/opencv/morphology/#_5","title":"\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u52fe\u914d","text":"<p>\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u52fe\u914d\u306f\u3001\u81a8\u5f35\u3057\u305f\u753b\u50cf\u3068\u53ce\u7e2e\u3057\u305f\u753b\u50cf\u306e\u5dee\u3092\u53d6\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8a08\u7b97\u3055\u308c\u3001\u7d50\u679c\u3068\u3057\u3066\u30a8\u30c3\u30b8\u304c\u5f37\u8abf\u3055\u308c\u305f\u753b\u50cf\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u52fe\u914d\u3092\u9069\u7528\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u4e8c\u5024\u5316\nMat binaryImage = new Mat();\nImgproc.threshold(image, binaryImage, 180, 255, Imgproc.THRESH_BINARY);\n\n// \u69cb\u9020\u5316\u8981\u7d20\u306e\u4f5c\u6210\nMat kernel = Imgproc.getStructuringElement(Imgproc.MORPH_ELLIPSE, new Size(5, 5));\n\n// \u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u52fe\u914d\nMat dst = new Mat();\nImgproc.morphologyEx(binaryImage, dst, Imgproc.MORPH_GRADIENT, kernel);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u52fe\u914d\", dst);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p> </p> <p></p>"},{"location":"java/opencv/pixel/","title":"\u753b\u7d20\u5024\u306e\u64cd\u4f5c","text":"<p>\u672c\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001Java \u3068 OpenCV \u3092\u7528\u3044\u3066\u3001\u753b\u50cf\u306e\u753b\u7d20\uff08\u30d4\u30af\u30bb\u30eb\uff09\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u5024\u3092\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002 \u753b\u7d20\u5024\u306e\u53c2\u7167\u3084\u5909\u66f4\u306f\u3001\u753b\u50cf\u51e6\u7406\u306b\u304a\u3051\u308b\u6700\u3082\u57fa\u672c\u7684\u306a\u64cd\u4f5c\u306e\u4e00\u3064\u3067\u3059\u3002</p>"},{"location":"java/opencv/pixel/#_1","title":"\u753b\u7d20\u5024","text":"<p>\u753b\u50cf\u306f\u3001\u753b\u7d20\uff08\u30d4\u30af\u30bb\u30eb\uff09\u3068\u547c\u3070\u308c\u308b\u5c0f\u3055\u306a\u70b9\u306e\u96c6\u5408\u4f53\u3067\u3059\u3002\u5404\u753b\u7d20\u306f\u3001\u7279\u5b9a\u306e\u8272\u3092\u6301\u3061\u3001\u3053\u308c\u304c\u96c6\u307e\u308b\u3053\u3068\u3067\u753b\u50cf\u3068\u8a8d\u8b58\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5834\u5408\u3001\u307b\u3068\u3093\u3069\u306e\u753b\u50cf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067 RGB\uff08\u8d64\u3001\u7dd1\u3001\u9752\uff09\u306e 3 \u8272\u3092\u7528\u3044\u3066\u8272\u3092\u8868\u73fe\u3057\u307e\u3059\uff08OpenCV \u3067\u306f BGR \u306e\u4e26\u3073\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3068\u306a\u308a\u307e\u3059\uff09\u3002\u753b\u7d20\u5024\u306b\u306f\u3053\u308c\u3089\u306e\u5404\u8272\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u3001\u901a\u5e38\u306f 0\uff08\u6700\u4f4e\uff09\u304b\u3089 255\uff08\u6700\u9ad8\uff09\u306e\u7bc4\u56f2\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"java/opencv/pixel/#_2","title":"\u753b\u7d20\u5024\u306e\u53c2\u7167","text":"<p>OpenCV \u306e <code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u753b\u7d20\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u3001<code>get</code> \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\u5f15\u6570\u306b\u53d6\u5f97\u3057\u305f\u3044\u753b\u7d20\u306e <code>row</code> \u3068 <code>col</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u305d\u306e\u753b\u7d20\u5024\u306e BGR \u60c5\u5831\u304c <code>double[]</code> \u3067\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\u7279\u5b9a\u306e\u753b\u7d20\u5024 <code>(255, 255)</code> \u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\");\n\n// \u753b\u7d20\u5024\u306e\u53c2\u7167\ndouble[] pixelValue = image.get(255, 255);\nSystem.out.println(\"Blue: \" + pixelValue[0]);\nSystem.out.println(\"Green: \" + pixelValue[1]);\nSystem.out.println(\"Red: \" + pixelValue[2]);\n</code></pre> \u5b9f\u884c\u7d50\u679c<pre><code>Blue: 132.0\nGreen: 132.0\nRed: 132.0\n</code></pre> <p><code>KanoHead.png</code> \u306f\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e CT \u753b\u50cf\u3067\u3042\u308b\u305f\u3081\u3001\u5404\u753b\u7d20\u306e BGR \u5024\u306f\u3059\u3079\u3066\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>Note</p> <p>\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5909\u63db\u306a\u3069\u306e\u64cd\u4f5c\u306b\u3088\u3063\u3066 <code>Mat</code> \u304c\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30b9\u5316\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001<code>get</code> \u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3067\u304d\u308b\u306e\u306f\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5024\uff08<code>pixelValue[0]</code>\uff09\u306e\u307f\u3068\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"java/opencv/pixel/#_3","title":"\u753b\u7d20\u5024\u306e\u5909\u66f4","text":"<p><code>Mat</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u753b\u7d20\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001<code>put</code> \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\u7b2c 1 \u5f15\u6570\u306b <code>row</code>\u3001\u7b2c 2 \u5f15\u6570\u306b <code>col</code>\u3001\u7b2c 3 \u5f15\u6570\u306b BGR \u5024\u306a\u3069\u306e\u8272\u60c5\u5831\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u4efb\u610f\u306e\u753b\u7d20\u5024\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001for \u6587\u3092\u7528\u3044\u3066\u4e2d\u592e\u306e\u77e9\u5f62\u9818\u57df\u3092\u8d64\u8272\u306b\u7f6e\u304d\u63db\u3048\u308b\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\");\n\n// \u753b\u7d20\u5024\u306e\u5909\u66f4\ndouble[] newPixelValue = {0, 0, 255};\nfor (int y = 230; y &lt; 280; y++) {\n    for (int x = 230; x &lt; 280; x++) {\n        image.put(x, y, newPixelValue);\n    }\n}\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u753b\u7d20\u5024\u306e\u5909\u66f4\", image);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p> <p>\u753b\u7d20\u5024\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001\u5206\u5c90\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u4e8c\u5024\u5316\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p></p>"},{"location":"java/opencv/segmentation/","title":"\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3","text":"<p>\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u753b\u50cf\u304b\u3089\u7279\u5b9a\u306e\u9818\u57df\u3092\u62bd\u51fa\u3059\u308b\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u6280\u8853\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002 \u9818\u57df\u30d9\u30fc\u30b9\u306e\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u753b\u50cf\u4e2d\u306e\u9023\u7d9a\u3059\u308b\u30d4\u30af\u30bb\u30eb\u30b0\u30eb\u30fc\u30d7\u3092\u4e00\u3064\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u3068\u3057\u3066\u8b58\u5225\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u7279\u306b\u300c\u9818\u57df\u62e1\u5f35\u6cd5\u300d\u3068\u300c\u5206\u5272\u7d71\u5408\u6cd5\u300d\u3068\u3044\u3046\u4e8c\u3064\u306e\u9818\u57df\u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u7126\u70b9\u3092\u5f53\u3066\u307e\u3059\u3002</p>"},{"location":"java/opencv/segmentation/#region-growing","title":"\u9818\u57df\u62e1\u5f35\u6cd5\uff08Region Growing\uff09","text":"<p>\u9818\u57df\u62e1\u5f35\u6cd5\u306f\u3001\u985e\u4f3c\u306e\u5c5e\u6027\u3092\u6301\u3064\u753b\u7d20\u3092\u57fa\u6e96\u306b\u3057\u3066\u65b0\u3057\u3044\u753b\u7d20\u3092\u9818\u57df\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u6210\u9577\u3055\u305b\u3066\u3044\u304d\u307e\u3059\u3002 \u6700\u3082\u57fa\u672c\u7684\u306a\u5c5e\u6027\u306f\u753b\u7d20\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5024\u3067\u3059\u304c\u3001\u30ab\u30e9\u30fc\u60c5\u5831\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u60c5\u5831\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002</p>"},{"location":"java/opencv/segmentation/#_1","title":"\u9818\u57df\u62e1\u5f35\u6cd5\u306e\u30b9\u30c6\u30c3\u30d7","text":"<ol> <li>\u30b7\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u9078\u629e\u3059\u308b: \u30bb\u30b0\u30e1\u30f3\u30c8\u6210\u9577\u306e\u958b\u59cb\u70b9\u3068\u306a\u308b\u753b\u7d20\u3092\u9078\u3073\u307e\u3059\u3002</li> <li>\u8fd1\u96a3\u753b\u7d20\u306e\u6761\u4ef6\u3092\u5b9a\u7fa9\u3059\u308b: \u30b7\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u985e\u4f3c\u3057\u305f\u5c5e\u6027\u3092\u6301\u3064\u753b\u7d20\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> <li>\u9818\u57df\u306e\u62e1\u5f35: \u6761\u4ef6\u306b\u5408\u3063\u305f\u8fd1\u96a3\u753b\u7d20\u3092\u73fe\u5728\u306e\u9818\u57df\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002</li> <li>\u6210\u9577\u30d7\u30ed\u30bb\u30b9\u306e\u53cd\u5fa9: \u65b0\u305f\u306b\u8ffd\u52a0\u3055\u308c\u305f\u753b\u7d20\u306e\u8fd1\u508d\u3082\u9818\u57df\u306b\u5408\u3046\u304b\u3092\u8a55\u4fa1\u3057\u3001\u6210\u9577\u3092\u7d9a\u3051\u307e\u3059\u3002</li> <li>\u7d42\u4e86\u6761\u4ef6: \u6210\u9577\u304c\u6b62\u307e\u308b\u307e\u3067\u3053\u308c\u3089\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002</li> </ol>"},{"location":"java/opencv/threshold/","title":"\u4e8c\u5024\u5316","text":"<p>\u753b\u50cf\u306e\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u6700\u3082\u5358\u7d14\u306a\u65b9\u6cd5\u3068\u3057\u3066\u3001\u4e8c\u5024\u5316\uff08binarization\uff09\u307e\u305f\u306f\u3057\u304d\u3044\u5024\u51e6\u7406\uff08thresholding\uff09\u304c\u3042\u308a\u307e\u3059\u3002\u4e8c\u5024\u5316\u3068\u306f\u3001\u753b\u7d20\u5024\u304c\u3057\u304d\u3044\u5024\u3088\u308a\u3082\u5927\u304d\u3051\u308c\u3070\u767d\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u9ed2\u3092\u5272\u308a\u5f53\u3066\u308b\u3068\u3044\u3063\u305f\u3088\u3046\u306b\u3001\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u753b\u50cf\u3092\u4e8c\u5024\u306b\u5909\u66f4\u3059\u308b\u64cd\u4f5c\u306e\u3053\u3068\u3067\u3059\u3002OpenCV \u3067\u4e8c\u5024\u5316\u3092\u9069\u7528\u3059\u308b\u306b\u306f\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u306b\u5bfe\u3057\u3066 <code>threshold</code> \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\u7b2c 1 \u5f15\u6570\u306b\u306f\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u3001\u7b2c 2 \u5f15\u6570\u306b\u306f\u3057\u304d\u3044\u5024\u3001\u7b2c 3 \u5f15\u6570\u306b\u306f\u753b\u7d20\u306e\u6700\u5927\u5024\u3001\u7b2c 4 \u5f15\u6570\u306b\u306f\u51e6\u7406\u306e\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p>"},{"location":"java/opencv/threshold/#_2","title":"\u4e8c\u5024\u5316\u51e6\u7406\u306e\u30d5\u30e9\u30b0","text":"<p>\u4ee3\u8868\u7684\u306a\u4e8c\u5024\u5316\u51e6\u7406\u306e\u30d5\u30e9\u30b0\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li><code>Imgproc.THRESH_BINARY</code></li> <li><code>Imgproc.THRESH_BINARY_INV</code></li> <li><code>Imgproc.THRESH_TRUNC</code></li> <li><code>Imgproc.THRESH_TOZERO</code></li> <li><code>Imgproc.THRESH_TOZERO_INV</code></li> <li><code>Imgproc.THRESH_OTSU</code></li> </ul> <p>\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08Image Thresholding\uff09 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"java/opencv/threshold/#_3","title":"\u5927\u5c40\u7684\u3057\u304d\u3044\u5024\u306b\u3088\u308b\u4e8c\u5024\u5316","text":"<p>\u6700\u3082\u5358\u7d14\u306a\u4e8c\u5024\u5316\u306e\u8003\u3048\u65b9\u3068\u3057\u3066\u3001\u5927\u5c40\u7684\u306a\u4e00\u3064\u306e\u3057\u304d\u3044\u5024\u3092\u4e8b\u524d\u306b\u8a2d\u5b9a\u3057\u3001\u305d\u306e\u5024\u3088\u308a\u3082\u5927\u304d\u3051\u308c\u3070\u767d\u3001\u5c0f\u3055\u3051\u308c\u3070\u9ed2\u306b\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u65b9\u6cd5\u306f \u5927\u5c40\u7684\u3057\u304d\u3044\u5024\u51e6\u7406 \u3068\u3082\u547c\u3070\u308c\u3001OpenCV \u306b\u304a\u3044\u3066\u306f <code>Imgproc.THRESH_BINARY</code> \u30d5\u30e9\u30b0\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u5927\u5c40\u7684\u3057\u304d\u3044\u5024\u51e6\u7406\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u5927\u5c40\u7684\u3057\u304d\u3044\u5024\u51e6\u7406\nMat binaryImage = new Mat();\nImgproc.threshold(image, binaryImage, 128, 255, Imgproc.THRESH_BINARY);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u5927\u5c40\u7684\u3057\u304d\u3044\u5024\u51e6\u7406\uff08thresh = 128\uff09\", binaryImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p> <p><code>threshold</code> \u306e\u7b2c 3 \u5f15\u6570\u306e\u5024\uff08\u3057\u304d\u3044\u5024\uff09\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u7d50\u679c\u306e\u5909\u5316\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"java/opencv/threshold/#_4","title":"\u5927\u6d25\u306e\u4e8c\u5024\u5316","text":"<p>\u4e8c\u5024\u5316\u306b\u304a\u3044\u3066\u3001\u3057\u304d\u3044\u5024\u3092\u81ea\u52d5\u7684\u306b\u6c7a\u5b9a\u3059\u308b\u4ee3\u8868\u7684\u306a\u624b\u6cd5\u3068\u3057\u3066\u3001\u5927\u6d25\u306e\u4e8c\u5024\u5316 \u304c\u3042\u308a\u307e\u3059\u3002\u5927\u6d25\u306e\u4e8c\u5024\u5316\u3067\u306f\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u5206\u96e2\u5ea6\u3092\u6700\u5927\u5316\u3059\u308b\u3088\u3046\u306b\u3057\u304d\u3044\u5024\u3092\u81ea\u52d5\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u7406\u8ad6\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5927\u6d25\u306e\u4e8c\u5024\u5316\u306f\u3001<code>threshold</code> \u30e1\u30bd\u30c3\u30c9\u306e\u7b2c 5 \u5f15\u6570\u3067 <code>Imgproc.THRESH_OTSU</code> \u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u7b2c 3 \u5f15\u6570\u306e\u3057\u304d\u3044\u5024\u306b\u306f\u6570\u5024\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u5927\u6d25\u306e\u4e8c\u5024\u5316\u3067\u306f\u3057\u304d\u3044\u5024\u304c\u81ea\u52d5\u6c7a\u5b9a\u3055\u308c\u308b\u305f\u3081\u5165\u529b\u3057\u305f\u5024\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u81ea\u52d5\u6c7a\u5b9a\u3055\u308c\u305f\u3057\u304d\u3044\u5024\u306f\u3001<code>threshold</code> \u306e\u8fd4\u308a\u5024\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u4ee5\u4e0b\u306f\u3001\u5927\u6d25\u306e\u4e8c\u5024\u5316\u306e\u5b9f\u88c5\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u5927\u5c40\u7684\u3057\u304d\u3044\u5024\u51e6\u7406\nMat binaryImage = new Mat();\ndouble thresh = Imgproc.threshold(image, binaryImage, 0, 255, Imgproc.THRESH_OTSU);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u5927\u6d25\u306e\u4e8c\u5024\u5316\uff08thresh = \" + thresh + \"\uff09\", binaryImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p> <p>\u3057\u304d\u3044\u5024\u3068\u3057\u3066 <code>92</code> \u3068\u3044\u3046\u5024\u304c\u6c7a\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"java/opencv/threshold/#_5","title":"\u9069\u5fdc\u7684\u3057\u304d\u3044\u5024\u51e6\u7406","text":"<p>\u4e00\u3064\u306e\u3057\u304d\u3044\u5024\u3067\u306f\u3046\u307e\u304f\u9818\u57df\u5206\u5272\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u7279\u5b9a\u9818\u57df\u3054\u3068\u306b\u9069\u5fdc\u7684\u306b\u3057\u304d\u3044\u5024\u3092\u6c7a\u5b9a\u3059\u308b \u9069\u5fdc\u7684\u95be\u5024\u51e6\u7406 (Adaptive Thresholding) \u304c\u6709\u52b9\u3067\u3042\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u9069\u5fdc\u7684\u3057\u304d\u3044\u5024\u51e6\u7406\u306f\u3001<code>adaptiveThreshold</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u3059\u3002</p> <pre><code>// \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f\nSystem.loadLibrary(Core.NATIVE_LIBRARY_NAME);\n\n// \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nMat image = Imgcodecs.imread(\"KanoHead.png\", Imgcodecs.IMREAD_GRAYSCALE);\n\n// \u9069\u5fdc\u7684\u3057\u304d\u3044\u5024\u51e6\u7406\nMat binaryImage = new Mat();\nint blockSize = 11; // \u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\uff08\u5947\u6570\uff09\nint C = 2; // \u5b9a\u6570\uff08\u5e73\u5747\u307e\u305f\u306f\u4e2d\u592e\u5024\u304b\u3089\u5f15\u304f\u5024\uff09\nImgproc.adaptiveThreshold(image, binaryImage, 255, Imgproc.ADAPTIVE_THRESH_GAUSSIAN_C, Imgproc.THRESH_BINARY, blockSize, C);\n\n// \u753b\u50cf\u306e\u8868\u793a\nHighGui.imshow(\"\u9069\u5fdc\u7684\u3057\u304d\u3044\u5024\u51e6\u7406\", binaryImage);\nHighGui.waitKey();\nSystem.exit(0);\n</code></pre> <p></p> <p></p> <p>\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u89e6\u308c\u305f\u4e8c\u5024\u5316\u51e6\u7406\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08Image Thresholding\uff09 \u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5404\u624b\u6cd5\u306e\u5229\u70b9\u3084\u6b20\u70b9\u306b\u3064\u3044\u3066\u3001\u8003\u3048\u306a\u304c\u3089\u5b9f\u88c5\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p>"},{"location":"ml/","title":"Index","text":"<p>\u307e\u3060</p>"},{"location":"python/","title":"Python \u306b\u3088\u308b\u6a5f\u68b0\u5b66\u7fd2\u30fb\u753b\u50cf\u51e6\u7406","text":"<p>Python \u306b\u3088\u308b\u6a5f\u68b0\u5b66\u7fd2\u30fb\u753b\u50cf\u51e6\u7406\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3067\u3059\u3002</p>"},{"location":"python/#_1","title":"\u74b0\u5883\u69cb\u7bc9","text":""},{"location":"python/#opencv","title":"OpenCV","text":""},{"location":"python/#pyqt","title":"PyQt","text":""},{"location":"python/environment/","title":"\u74b0\u5883\u69cb\u7bc9","text":"<p>\u307e\u3060</p> <p></p>"},{"location":"python/opencv/","title":"OpenCV","text":""},{"location":"python/opencv/#pydicom","title":"Pydicom","text":"<pre><code>pip install pydicom\n</code></pre> <pre><code>pip install PyQt5\n</code></pre> <pre><code>pip install pyqt5 pyqt5-tools\n</code></pre>"},{"location":"python/pyqt/","title":"PyQt","text":"<p>\u307e\u3060 </p>"}]}